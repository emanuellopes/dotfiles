!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
g:loaded_nerdtree_fs_menu	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	variable	line:16
echo	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	function	line:33
echoWarning	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	function	line:39
promptToDelBuffer	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	function	line:53
NERDTreeAddNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	function	line:61
NERDTreeMoveNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	function	line:90
NERDTreeDeleteNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	function	line:124
NERDTreeCopyNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	function	line:168
NERDTreeQuickLook	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	function	line:203
NERDTreeRevealInFinder	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	function	line:210
NERDTreeExecuteFile	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	function	line:217
g:loaded_nerdtree_exec_menuitem	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	variable	line:16
NERDTreeExecFileActive	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	function	line:24
NERDTreeExecFile	/home/emanuelx/dotfiles/home/emanuelx/.vim/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	function	line:29
s:tree_up_dir_line	/home/emanuelx/dotfiles/home/emanuelx/.vim/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	variable	line:1
g:colors_name	/home/emanuelx/dotfiles/home/emanuelx/.vim/colors/termschool.vim	/^let g:colors_name = "termschool"$/;"	variable	line:27
loaded_matchit	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^let loaded_matchit = 1$/;"	variable	line:38
s:last_mps	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^let s:last_mps = ""$/;"	variable	line:39
s:last_words	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^let s:last_words = ":"$/;"	variable	line:40
s:save_cpo	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^let s:save_cpo = &cpo$/;"	variable	line:41
%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^nnoremap <silent> % :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	map	line:43
g%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	map	line:44
%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^vnoremap <silent> % :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	map	line:45
g%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	map	line:46
%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^onoremap <silent> % v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	map	line:47
g%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	map	line:48
[%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	map	line:50
]%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W", "n") <CR>$/;"	map	line:51
[%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^vmap [% <Esc>[%m'gv``$/;"	map	line:52
]%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^vmap ]% <Esc>]%m'gv``$/;"	map	line:53
[%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	map	line:56
]%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W", "o") <CR>$/;"	map	line:57
a%	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^vmap a% <Esc>[%v]%$/;"	map	line:59
s:notslash	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	variable	line:74
Match_wrapper	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	function	line:75
CleanUp	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	function	line:268
InsertRefs	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	function	line:301
ParseWords	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^fun! s:ParseWords(groups)$/;"	function	line:360
Wholematch	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^fun! s:Wholematch(string, pat, start)$/;"	function	line:395
Ref	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^fun! s:Ref(string, d, ...)$/;"	function	line:414
Count	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^fun! s:Count(string, pattern, ...)$/;"	function	line:459
Resolve	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^fun! s:Resolve(source, target, output)$/;"	function	line:484
Choose	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	function	line:536
MatchDebug	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^command! -nargs=0 MatchDebug call s:Match_debug()$/;"	command	line:575
Match_debug	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^fun! s:Match_debug()$/;"	function	line:577
MultiMatch	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	function	line:607
ParseSkip	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/MatchIt.vim	/^fun! s:ParseSkip(str)$/;"	function	line:757
loaded_mru	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^let loaded_mru=1$/;"	variable	line:225
s:cpo_save	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^let s:cpo_save = &cpo$/;"	variable	line:232
MRU_Max_Entries	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Max_Entries = 100$/;"	variable	line:238
MRU_Exclude_Files	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Exclude_Files = ''$/;"	variable	line:243
MRU_Include_Files	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Include_Files = ''$/;"	variable	line:248
MRU_Window_Height	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Window_Height = 8$/;"	variable	line:254
MRU_Use_Current_Window	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Use_Current_Window = 0$/;"	variable	line:258
MRU_Auto_Close	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Auto_Close = 1$/;"	variable	line:262
MRU_File	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^        let MRU_File = $HOME . '\/.vim_mru_files'$/;"	variable	line:267
MRU_File	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^        let MRU_File = $VIM . '\/_vim_mru_files'$/;"	variable	line:269
MRU_File	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^                let MRU_File = $USERPROFILE . '\\_vim_mru_files'$/;"	variable	line:273
MRU_Add_Menu	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Add_Menu = 1$/;"	variable	line:281
MRU_Max_Menu_Entries	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Max_Menu_Entries = 10$/;"	variable	line:288
MRU_Max_Submenu_Entries	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Max_Submenu_Entries = 10$/;"	variable	line:295
MRU_Window_Open_Always	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Window_Open_Always = 0$/;"	variable	line:303
MRU_Open_File_Use_Tabs	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Open_File_Use_Tabs = 0$/;"	variable	line:311
MRU_Filename_Format	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^    let MRU_Filename_Format = {$/;"	variable	line:322
s:mru_list_locked	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^let s:mru_list_locked = 0$/;"	variable	line:331
MRU_LoadList	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_LoadList()$/;"	function	line:335
MRU_SaveList	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_SaveList()$/;"	function	line:361
MRU_AddFile	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_AddFile(acmd_bufnr)$/;"	function	line:371
s:esc_filename_chars	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^let s:esc_filename_chars = ' *?[{`$%#"|!<>();&' . "'\\t\\n"$/;"	variable	line:450
MRU_escape_filename	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_escape_filename(fname)$/;"	function	line:451
MRU_Edit_File	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_Edit_File(filename, sanitized)$/;"	function	line:464
MRU_Open_File_In_Tab	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_Open_File_In_Tab(fname, esc_fname)$/;"	function	line:503
MRU_Window_Edit_File	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_Window_Edit_File(fname, multi, edit_type, open_type)$/;"	function	line:551
MRU_Select_File_Cmd	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_Select_File_Cmd(opt) range$/;"	function	line:642
MRU_Warn_Msg	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_Warn_Msg(msg)$/;"	function	line:674
MRU_Open_Window	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_Open_Window(...)$/;"	function	line:684
MRU_Complete	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_Complete(ArgLead, CmdLine, CursorPos)$/;"	function	line:842
MRU_Cmd	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_Cmd(pat)$/;"	function	line:855
MRU_add_files_to_menu	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_add_files_to_menu(prefix, file_list)$/;"	function	line:924
MRU_Refresh_Menu	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^function! s:MRU_Refresh_Menu()$/;"	function	line:955
MRU	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^command! -nargs=? -complete=customlist,s:MRU_Complete MRU$/;"	command	line:1028
Mru	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/mru.vim	/^command! -nargs=? -complete=customlist,s:MRU_Complete Mru$/;"	command	line:1030
s:NERD_tree_version	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:NERD_tree_version = '4.2.0'$/;"	variable	line:13
loaded_nerd_tree	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	variable	line:24
s:old_cpo	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	variable	line:27
s:running_windows	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:running_windows = has("win16") || has("win32") || has("win64")$/;"	variable	line:30
initVariable	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	function	line:42
g:NERDTreeIgnore	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	variable	line:58
g:NERDTreeSortOrder	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	variable	line:74
s:NERDTreeSortStarIndex	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	variable	line:84
g:NERDTreeStatusline	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	variable	line:91
s:escape_chars	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^    let s:escape_chars =  " `\\|\\"#%&,?()\\*^<>"$/;"	variable	line:145
s:escape_chars	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^    let s:escape_chars =  " \\\\`\\|\\"#%&,?()\\*^<>[]"$/;"	variable	line:147
s:NERDTreeBufName	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:NERDTreeBufName = 'NERD_tree_'$/;"	variable	line:149
s:tree_wid	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:tree_wid = 2$/;"	variable	line:151
s:tree_markup_reg	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:tree_markup_reg = '^[ `|]*[\\-+~▾▸ ]\\+'$/;"	variable	line:152
s:tree_up_dir_line	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	variable	line:153
s:next_buffer_number	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:next_buffer_number = 1$/;"	variable	line:156
NERDTree	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call s:initNerdTree('<args>')$/;"	command	line:161
NERDTreeToggle	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call s:toggle('<args>')$/;"	command	line:162
NERDTreeClose	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call s:closeTreeIfOpen()$/;"	command	line:163
NERDTreeFromBookmark	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,s:completeBookmarks -bar NERDTreeFromBookmark call s:initNerdTree('<args>')$/;"	command	line:164
NERDTreeMirror	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call s:initNerdTreeMirror()$/;"	command	line:165
NERDTreeFind	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call s:findAndRevealPath()$/;"	command	line:166
NERDTree	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	augroup	line:169
NERDTreeHijackNetrw	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	augroup	line:184
s:Bookmark	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:Bookmark = {}$/;"	variable	line:194
Bookmark.activate	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.activate()$/;"	function	line:196
Bookmark.AddBookmark	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	function	line:210
Bookmark.Bookmarks	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.Bookmarks()$/;"	function	line:223
Bookmark.BookmarkExistsFor	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	function	line:232
Bookmark.BookmarkFor	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	function	line:243
Bookmark.BookmarkNames	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkNames()$/;"	function	line:253
Bookmark.CacheBookmarks	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	function	line:266
Bookmark.compareTo	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	function	line:300
Bookmark.ClearAll	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.ClearAll()$/;"	function	line:305
Bookmark.delete	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.delete()$/;"	function	line:314
Bookmark.getNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	function	line:332
Bookmark.GetNodeForName	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	function	line:343
Bookmark.GetSelected	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.GetSelected()$/;"	function	line:349
Bookmark.InvalidBookmarks	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	function	line:365
Bookmark.mustExist	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.mustExist()$/;"	function	line:372
Bookmark.New	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.New(name, path)$/;"	function	line:381
Bookmark.openInNewTab	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	function	line:393
Bookmark.setPath	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.setPath(path)$/;"	function	line:408
Bookmark.Sort	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.Sort()$/;"	function	line:413
Bookmark.str	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.str()$/;"	function	line:419
Bookmark.toRoot	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.toRoot()$/;"	function	line:433
Bookmark.ToRoot	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.ToRoot(name)$/;"	function	line:447
Bookmark.validate	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.validate()$/;"	function	line:454
Bookmark.Write	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Bookmark.Write()$/;"	function	line:467
s:KeyMap	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:KeyMap = {}$/;"	variable	line:483
KeyMap.All	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:KeyMap.All()$/;"	function	line:485
KeyMap.BindAll	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:KeyMap.BindAll()$/;"	function	line:493
KeyMap.bind	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:KeyMap.bind()$/;"	function	line:500
KeyMap.Create	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:KeyMap.Create(options)$/;"	function	line:505
s:MenuController	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:MenuController = {}$/;"	variable	line:514
MenuController.New	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController.New(menuItems)$/;"	function	line:517
MenuController.showMenu	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController.showMenu()$/;"	function	line:530
MenuController._echoPrompt	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController._echoPrompt()$/;"	function	line:554
MenuController._current	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController._current()$/;"	function	line:569
MenuController._handleKeypress	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController._handleKeypress(key)$/;"	function	line:576
MenuController._allIndexesFor	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	function	line:601
MenuController._nextIndexFor	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	function	line:616
MenuController._setCmdheight	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController._setCmdheight()$/;"	function	line:634
MenuController._saveOptions	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController._saveOptions()$/;"	function	line:641
MenuController._restoreOptions	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController._restoreOptions()$/;"	function	line:650
MenuController._cursorDown	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController._cursorDown()$/;"	function	line:657
MenuController._cursorUp	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuController._cursorUp()$/;"	function	line:674
s:MenuItem	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:MenuItem = {}$/;"	variable	line:691
MenuItem.All	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuItem.All()$/;"	function	line:694
MenuItem.AllEnabled	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuItem.AllEnabled()$/;"	function	line:703
MenuItem.Create	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuItem.Create(options)$/;"	function	line:715
MenuItem.CreateSeparator	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	function	line:743
MenuItem.CreateSubmenu	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	function	line:754
MenuItem.enabled	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuItem.enabled()$/;"	function	line:766
MenuItem.execute	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuItem.execute()$/;"	function	line:777
MenuItem.isSeparator	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuItem.isSeparator()$/;"	function	line:790
MenuItem.isSubmenu	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:MenuItem.isSubmenu()$/;"	function	line:796
s:TreeFileNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:TreeFileNode = {}$/;"	variable	line:805
TreeFileNode.activate	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.activate(forceKeepWinOpen)$/;"	function	line:807
TreeFileNode.bookmark	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	function	line:815
TreeFileNode.cacheParent	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.cacheParent()$/;"	function	line:836
compareNodes	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:compareNodes(n1, n2)$/;"	function	line:853
TreeFileNode.clearBoomarks	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.clearBoomarks()$/;"	function	line:858
TreeFileNode.copy	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.copy(dest)$/;"	function	line:867
TreeFileNode.delete	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.delete()$/;"	function	line:881
TreeFileNode.displayString	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.displayString()$/;"	function	line:893
TreeFileNode.equals	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	function	line:907
TreeFileNode.findNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findNode(path)$/;"	function	line:917
TreeFileNode.findOpenDirSiblingWithVisibleChildren	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	function	line:933
TreeFileNode.findSibling	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	function	line:957
TreeFileNode.getLineNum	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.getLineNum()$/;"	function	line:989
TreeFileNode.GetRootForTab	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	function	line:1038
TreeFileNode.GetRootLineNum	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	function	line:1046
TreeFileNode.GetSelected	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetSelected()$/;"	function	line:1056
TreeFileNode.isVisible	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isVisible()$/;"	function	line:1070
TreeFileNode.isRoot	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isRoot()$/;"	function	line:1075
TreeFileNode.makeRoot	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.makeRoot()$/;"	function	line:1085
TreeFileNode.New	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.New(path)$/;"	function	line:1105
TreeFileNode.open	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.open()$/;"	function	line:1122
TreeFileNode.openSplit	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openSplit()$/;"	function	line:1155
TreeFileNode.openVSplit	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openVSplit()$/;"	function	line:1221
TreeFileNode.openInNewTab	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	function	line:1241
TreeFileNode.putCursorHere	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	function	line:1262
TreeFileNode.refresh	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.refresh()$/;"	function	line:1283
TreeFileNode.rename	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.rename(newName)$/;"	function	line:1288
TreeFileNode.renderToString	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode.renderToString()$/;"	function	line:1303
TreeFileNode._renderToString	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	function	line:1315
s:TreeDirNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:TreeDirNode = copy(s:TreeFileNode)$/;"	variable	line:1400
TreeDirNode.AbsoluteTreeRoot	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	function	line:1403
TreeDirNode.activate	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.activate(forceKeepWinOpen)$/;"	function	line:1412
TreeDirNode.addChild	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	function	line:1423
TreeDirNode.close	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.close()$/;"	function	line:1434
TreeDirNode.closeChildren	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.closeChildren()$/;"	function	line:1440
TreeDirNode.createChild	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	function	line:1459
TreeDirNode.findNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.findNode(path)$/;"	function	line:1471
TreeDirNode.getChildCount	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildCount()$/;"	function	line:1491
TreeDirNode.getChild	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChild(path)$/;"	function	line:1503
TreeDirNode.getChildByIndex	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	function	line:1523
TreeDirNode.getChildIndex	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	function	line:1539
TreeDirNode.GetSelected	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.GetSelected()$/;"	function	line:1566
TreeDirNode.getVisibleChildCount	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	function	line:1577
TreeDirNode.getVisibleChildren	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	function	line:1586
TreeDirNode.hasVisibleChildren	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	function	line:1598
TreeDirNode._initChildren	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	function	line:1610
TreeDirNode.New	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.New(path)$/;"	function	line:1659
TreeDirNode.open	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.open()$/;"	function	line:1679
TreeDirNode.openExplorer	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openExplorer()$/;"	function	line:1691
TreeDirNode.openInNewTab	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	function	line:1703
TreeDirNode.openRecursively	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openRecursively()$/;"	function	line:1723
TreeDirNode._openRecursively2	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	function	line:1734
TreeDirNode.refresh	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.refresh()$/;"	function	line:1751
TreeDirNode.reveal	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.reveal(path)$/;"	function	line:1804
TreeDirNode.removeChild	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	function	line:1834
TreeDirNode.sortChildren	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.sortChildren()$/;"	function	line:1850
TreeDirNode.toggleOpen	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.toggleOpen()$/;"	function	line:1857
TreeDirNode.transplantChild	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	function	line:1872
s:Path	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let s:Path = {}$/;"	variable	line:1884
Path.AbsolutePathFor	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	function	line:1886
Path.bookmarkNames	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.bookmarkNames()$/;"	function	line:1902
Path.cacheDisplayString	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.cacheDisplayString()$/;"	function	line:1909
Path.changeToDir	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.changeToDir()$/;"	function	line:1935
Path.compareTo	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.compareTo(path)$/;"	function	line:1959
Path.Create	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.Create(fullpath)$/;"	function	line:1999
Path.copy	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.copy(dest)$/;"	function	line:2031
Path.CopyingSupported	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.CopyingSupported()$/;"	function	line:2048
Path.copyingWillOverwrite	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	function	line:2060
Path.delete	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.delete()$/;"	function	line:2079
Path.displayString	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.displayString()$/;"	function	line:2106
Path.extractDriveLetter	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	function	line:2116
Path.exists	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.exists()$/;"	function	line:2126
Path.getDir	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.getDir()$/;"	function	line:2136
Path.getParent	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.getParent()$/;"	function	line:2149
Path.getLastPathComponent	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	function	line:2165
Path.getSortOrderIndex	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.getSortOrderIndex()$/;"	function	line:2178
Path.ignore	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.ignore()$/;"	function	line:2191
Path.isUnder	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.isUnder(path)$/;"	function	line:2219
Path.JoinPathStrings	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.JoinPathStrings(...)$/;"	function	line:2230
Path.equals	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.equals(path)$/;"	function	line:2245
Path.New	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.New(path)$/;"	function	line:2251
Path.Slash	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.Slash()$/;"	function	line:2263
Path.readInfoFromDisk	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	function	line:2271
Path.refresh	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.refresh()$/;"	function	line:2322
Path.rename	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.rename(newPath)$/;"	function	line:2330
Path.str	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.str(...)$/;"	function	line:2370
Path._strForUI	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path._strForUI()$/;"	function	line:2400
Path._strForCd	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path._strForCd()$/;"	function	line:2411
Path._strForEdit	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path._strForEdit()$/;"	function	line:2418
Path._strForGlob	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path._strForGlob()$/;"	function	line:2444
Path._str	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path._str()$/;"	function	line:2464
Path.strTrunk	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.strTrunk()$/;"	function	line:2477
Path.WinToUnixPath	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	function	line:2488
bufInWindows	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:bufInWindows(bnum)$/;"	function	line:2513
checkForBrowse	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:checkForBrowse(dir)$/;"	function	line:2531
compareBookmarks	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:compareBookmarks(first, second)$/;"	function	line:2538
completeBookmarks	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:completeBookmarks(A,L,P)$/;"	function	line:2544
exec	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:exec(cmd)$/;"	function	line:2549
findAndRevealPath	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:findAndRevealPath()$/;"	function	line:2556
initNerdTree	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:initNerdTree(name)$/;"	function	line:2595
initNerdTreeInPlace	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:initNerdTreeInPlace(dir)$/;"	function	line:2650
initNerdTreeMirror	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:initNerdTreeMirror()$/;"	function	line:2678
nextBufferName	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:nextBufferName()$/;"	function	line:2732
tabpagevar	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:tabpagevar(tabnr, var)$/;"	function	line:2738
treeExistsForBuf	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:treeExistsForBuf()$/;"	function	line:2756
treeExistsForTab	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:treeExistsForTab()$/;"	function	line:2761
unique	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:unique(list)$/;"	function	line:2766
g:NERDTreePath	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let g:NERDTreePath = s:Path$/;"	variable	line:2777
g:NERDTreeDirNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	variable	line:2778
g:NERDTreeFileNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	variable	line:2779
g:NERDTreeBookmark	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	variable	line:2780
NERDTreeAddMenuItem	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	function	line:2782
NERDTreeAddMenuSeparator	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	function	line:2786
NERDTreeAddSubmenu	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	function	line:2791
NERDTreeAddKeyMap	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	function	line:2795
NERDTreeRender	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	function	line:2799
centerView	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:centerView()$/;"	function	line:2808
closeTree	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:closeTree()$/;"	function	line:2820
closeTreeIfOpen	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:closeTreeIfOpen()$/;"	function	line:2844
closeTreeIfQuitOnOpen	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:closeTreeIfQuitOnOpen()$/;"	function	line:2851
createTreeWin	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:createTreeWin()$/;"	function	line:2859
dumpHelp	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:dumpHelp()$/;"	function	line:2879
echo	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:echo(msg)$/;"	function	line:2987
echoWarning	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:echoWarning(msg)$/;"	function	line:2995
echoError	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:echoError(msg)$/;"	function	line:3004
firstUsableWindow	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:firstUsableWindow()$/;"	function	line:3011
getPath	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:getPath(ln)$/;"	function	line:3035
getTreeWinNum	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:getTreeWinNum()$/;"	function	line:3096
indentLevelFor	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:indentLevelFor(line)$/;"	function	line:3104
isTreeOpen	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:isTreeOpen()$/;"	function	line:3114
isWindowUsable	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:isWindowUsable(winnumber)$/;"	function	line:3123
jumpToChild	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:jumpToChild(direction)$/;"	function	line:3151
promptToDelBuffer	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	function	line:3187
putCursorOnBookmarkTable	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:putCursorOnBookmarkTable()$/;"	function	line:3196
putCursorInTreeWin	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:putCursorInTreeWin()$/;"	function	line:3219
renderBookmarks	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:renderBookmarks()$/;"	function	line:3228
renderView	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:renderView()$/;"	function	line:3245
renderViewSavingPosition	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:renderViewSavingPosition()$/;"	function	line:3303
restoreScreenState	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:restoreScreenState()$/;"	function	line:3324
saveScreenState	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:saveScreenState()$/;"	function	line:3341
setCommonBufOptions	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:setCommonBufOptions()$/;"	function	line:3354
setupStatusline	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:setupStatusline()$/;"	function	line:3391
stripMarkupFromLine	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:stripMarkupFromLine(line, removeLeadingSpaces)$/;"	function	line:3403
toggle	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:toggle(dir)$/;"	function	line:3440
activateNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:activateNode(forceKeepWindowOpen)$/;"	function	line:3463
bindMappings	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:bindMappings()$/;"	function	line:3480
bookmarkNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:bookmarkNode(...)$/;"	function	line:3550
checkForActivate	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:checkForActivate()$/;"	function	line:3571
chCwd	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:chCwd()$/;"	function	line:3594
chRoot	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:chRoot()$/;"	function	line:3610
clearBookmarks	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:clearBookmarks(bookmarks)$/;"	function	line:3623
closeChildren	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:closeChildren()$/;"	function	line:3639
closeCurrentDir	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:closeCurrentDir()$/;"	function	line:3652
closeTreeWindow	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:closeTreeWindow()$/;"	function	line:3670
deleteBookmark	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:deleteBookmark()$/;"	function	line:3683
displayHelp	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:displayHelp()$/;"	function	line:3708
handleMiddleMouse	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:handleMiddleMouse()$/;"	function	line:3715
jumpToFirstChild	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:jumpToFirstChild()$/;"	function	line:3732
jumpToLastChild	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:jumpToLastChild()$/;"	function	line:3738
jumpToParent	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:jumpToParent()$/;"	function	line:3744
jumpToRoot	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:jumpToRoot()$/;"	function	line:3760
jumpToSibling	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:jumpToSibling(forward)$/;"	function	line:3771
openBookmark	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:openBookmark(name)$/;"	function	line:3787
openEntrySplit	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:openEntrySplit(vertical, forceKeepWindowOpen)$/;"	function	line:3809
openExplorer	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:openExplorer()$/;"	function	line:3826
openInNewTab	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:openInNewTab(stayCurrentTab)$/;"	function	line:3840
openNodeRecursively	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:openNodeRecursively()$/;"	function	line:3852
previewNode	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:previewNode(openNewWin)$/;"	function	line:3870
revealBookmark	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:revealBookmark(name)$/;"	function	line:3882
refreshRoot	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:refreshRoot()$/;"	function	line:3893
refreshCurrent	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:refreshCurrent()$/;"	function	line:3903
showMenu	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:showMenu()$/;"	function	line:3917
toggleIgnoreFilter	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:toggleIgnoreFilter()$/;"	function	line:3930
toggleShowBookmarks	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:toggleShowBookmarks()$/;"	function	line:3938
toggleShowFiles	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:toggleShowFiles()$/;"	function	line:3950
toggleShowHidden	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:toggleShowHidden()$/;"	function	line:3958
toggleZoom	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:toggleZoom()$/;"	function	line:3966
upDir	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/NERD_tree.vim	/^function! s:upDir(keepState)$/;"	function	line:3983
loaded_bclose	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/bclose.vim	/^let loaded_bclose = 1$/;"	variable	line:6
bclose_multiple	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/bclose.vim	/^  let bclose_multiple = 1$/;"	variable	line:8
Warn	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/bclose.vim	/^function! s:Warn(msg)$/;"	function	line:12
Bclose	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/bclose.vim	/^function! s:Bclose(bang, buffer)$/;"	function	line:23
Bclose	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/bclose.vim	/^command! -bang -complete=buffer -nargs=? Bclose call s:Bclose('<bang>', '<args>')$/;"	command	line:71
<Leader>bd	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/bclose.vim	/^nnoremap <silent> <Leader>bd :Bclose<CR>$/;"	map	line:72
Rename	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/Rename2.vim	/^command! -nargs=* -complete=file -bang Rename :call Rename("<args>", "<bang>")$/;"	command	line:14
Rename	/home/emanuelx/dotfiles/home/emanuelx/.vim/plugin/Rename2.vim	/^function! Rename(name, bang)$/;"	function	line:16
g:loaded_AutoClose	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^let g:loaded_AutoClose = 1$/;"	variable	line:16
s:global_cpo	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^let s:global_cpo = &cpo " store compatible-mode in local variable$/;"	variable	line:18
g:AutoClosePreserveDotReg	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^    let g:AutoClosePreserveDotReg = 1$/;"	variable	line:22
<Esc>OA	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^        imap <silent> <Esc>OA <Up>$/;"	map	line:29
<Esc>OB	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^        imap <silent> <Esc>OB <Down>$/;"	map	line:30
<Esc>OC	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^        imap <silent> <Esc>OC <Right>$/;"	map	line:31
<Esc>OD	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^        imap <silent> <Esc>OD <Left>$/;"	map	line:32
<Esc>OH	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^        imap <silent> <Esc>OH <Home>$/;"	map	line:33
<Esc>OF	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^        imap <silent> <Esc>OF <End>$/;"	map	line:34
<Esc>[5~	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^        imap <silent> <Esc>[5~ <PageUp>$/;"	map	line:35
<Esc>[6~	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^        imap <silent> <Esc>[6~ <PageDown>$/;"	map	line:36
GetCharAhead	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:GetCharAhead(len)$/;"	function	line:43
GetCharBehind	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:GetCharBehind(len)$/;"	function	line:50
GetNextChar	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:GetNextChar()$/;"	function	line:57
GetPrevChar	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:GetPrevChar()$/;"	function	line:61
IsEmptyPair	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:IsEmptyPair()$/;"	function	line:67
GetCurrentSyntaxRegion	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:GetCurrentSyntaxRegion()$/;"	function	line:73
GetCurrentSyntaxRegionIf	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:GetCurrentSyntaxRegionIf(char)$/;"	function	line:77
IsForbidden	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:IsForbidden(char)$/;"	function	line:86
AllowQuote	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:AllowQuote(char, isBS)$/;"	function	line:96
CountQuotes	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:CountQuotes(char)$/;"	function	line:119
PushBuffer	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:PushBuffer(char)$/;"	function	line:159
PopBuffer	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:PopBuffer()$/;"	function	line:166
EmptyBuffer	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:EmptyBuffer()$/;"	function	line:172
FlushBuffer	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:FlushBuffer()$/;"	function	line:178
InsertStringAtCursor	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:InsertStringAtCursor(str)$/;"	function	line:191
EraseNCharsAtCursor	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:EraseNCharsAtCursor(len)$/;"	function	line:202
InsertPair	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:InsertPair(opener)$/;"	function	line:214
ClosePair	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:ClosePair(closer)$/;"	function	line:235
OpenOrCloseTwinPair	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:OpenOrCloseTwinPair(char)$/;"	function	line:250
Delete	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:Delete()$/;"	function	line:261
Backspace	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:Backspace()$/;"	function	line:276
Space	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:Space()$/;"	function	line:291
Enter	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:Enter()$/;"	function	line:300
ToggleAutoClose	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:ToggleAutoClose()$/;"	function	line:310
AutoClose#ParsePairs	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! AutoClose#ParsePairs(string)$/;"	function	line:322
AutoClose#DefaultPairs	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! AutoClose#DefaultPairs()$/;"	function	line:349
ModifyPairsList	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:ModifyPairsList(list, pairsToAdd, openersToRemove)$/;"	function	line:353
AutoClose#DefaultPairsModified	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! AutoClose#DefaultPairsModified(pairsToAdd,openersToRemove)$/;"	function	line:359
DefineVariables	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:DefineVariables()$/;"	function	line:364
CreatePairsMaps	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:CreatePairsMaps()$/;"	function	line:428
CreateExtraMaps	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:CreateExtraMaps()$/;"	function	line:452
CreateMaps	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:CreateMaps()$/;"	function	line:483
IsLoadedOnBuffer	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:IsLoadedOnBuffer()$/;"	function	line:492
keyName	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:keyName(char)$/;"	function	line:497
quoteAndEscape	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^function! s:quoteAndEscape(char)$/;"	function	line:503
s:AutoClosePairs_FactoryDefaults	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^let s:AutoClosePairs_FactoryDefaults = AutoClose#ParsePairs("() {} [] ` \\" '")$/;"	variable	line:512
g:AutoClosePairs	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^    let g:AutoClosePairs = s:ModifyPairsList($/;"	variable	line:516
s:movementKeys	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^let s:movementKeys = split('ESC UP DOWN LEFT RIGHT HOME END PAGEUP PAGEDOWN')$/;"	variable	line:522
s:pumMovementKeys	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^let s:pumMovementKeys = split('UP DOWN PAGEUP PAGEDOWN')$/;"	variable	line:524
<Plug	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^augroup <Plug>(autoclose)$/;"	augroup	line:531
AutoCloseOn	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^command! AutoCloseOn :let b:AutoCloseOn = 1$/;"	command	line:539
AutoCloseOff	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^command! AutoCloseOff :let b:AutoCloseOn = 0$/;"	command	line:540
AutoCloseToggle	/home/emanuelx/dotfiles/home/emanuelx/.vim/AutoClose.vim	/^command! AutoCloseToggle :call s:ToggleAutoClose()$/;"	command	line:541
g:loaded_pathogen	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	variable	line:17
pathogen#infect	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	function	line:24
pathogen#split	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	function	line:43
pathogen#join	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	function	line:50
pathogen#legacyjoin	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	function	line:77
pathogen#cycle_filetype	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	function	line:82
pathogen#is_disabled	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#is_disabled(path) abort " {{{1$/;"	function	line:91
pathogen#surround	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#surround(path) abort " {{{1$/;"	function	line:101
pathogen#interpose	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#interpose(name) abort " {{{1$/;"	function	line:122
s:done_bundles	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^let s:done_bundles = {}$/;"	variable	line:149
pathogen#helptags	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#helptags() abort " {{{1$/;"	function	line:154
Helptags	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	command	line:165
pathogen#execute	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#execute(...) abort " {{{1$/;"	function	line:168
pathogen#slash	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#slash() abort " {{{1$/;"	function	line:178
pathogen#separator	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	function	line:182
pathogen#glob	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	function	line:187
pathogen#glob_directories	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	function	line:193
pathogen#uniq	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	function	line:198
pathogen#fnameescape	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#fnameescape(string) abort " {{{1$/;"	function	line:216
pathogen#runtime_findfile	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) abort "{{{1$/;"	function	line:227
warn	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! s:warn(msg)$/;"	function	line:239
pathogen#runtime_prepend_subdirectories	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	function	line:247
pathogen#incubate	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#incubate(...) abort " {{{1$/;"	function	line:252
pathogen#runtime_append_all_bundles	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) abort " {{{1$/;"	function	line:259
s:vopen_warning	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^let s:vopen_warning = 0$/;"	variable	line:272
find	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd) " {{{1$/;"	function	line:274
Findcomplete	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	function	line:295
Ve	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	command	line:323
Vedit	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	command	line:324
Vopen	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	command	line:325
Vsplit	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	command	line:326
Vvsplit	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	command	line:327
Vtabedit	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	command	line:328
Vpedit	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	command	line:329
Vread	/home/emanuelx/dotfiles/home/emanuelx/.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	command	line:330
loaded_snips	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	variable	line:16
s:snippets	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	variable	line:22
snippets_dir	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	variable	line:25
MakeSnip	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	function	line:28
ExtractSnips	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	function	line:41
ProcessFile	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	function	line:56
ExtractSnipsFile	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	function	line:68
ResetSnippets	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun! ResetSnippets()$/;"	function	line:95
g:did_ft	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^let g:did_ft = {}$/;"	variable	line:99
GetSnippets	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	function	line:100
DefineSnips	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	function	line:114
TriggerSnippet	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	function	line:125
BackwardsSnippet	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	function	line:163
GetSnippet	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	function	line:182
ChooseSnippet	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	function	line:201
ShowAvailableSnips	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	function	line:213
s:did_snips_mappings	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	variable	line:6
<tab>	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	map	line:8
<s-tab>	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	map	line:10
<c-r><tab>	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	map	line:12
s:did_snip_helper	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	variable	line:5
Close	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	function	line:8
Filename	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun! Filename(...)$/;"	function	line:1
RemoveSnippet	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	function	line:7
snipMate#expandSnip	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	function	line:17
ProcessSnippet	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	function	line:76
Count	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	function	line:113
BuildTabStops	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	function	line:134
snipMate#jumpTabStop	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	function	line:169
UpdatePlaceholderTabStops	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	function	line:211
UpdateTabStops	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	function	line:258
SelectWord	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun s:SelectWord()$/;"	function	line:302
UpdateChangedSnip	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	function	line:329
UpdateVars	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/snipMate/autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	function	line:387
_	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/getjsprops.js	/^var _ = function() {$/;"	function	line:1
removeDups	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/getjsprops.js	/^  var removeDups = function(arr) {$/;"	function	line:2
_.removeDups	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/getjsprops.js	/^  var removeDups = function(arr) {$/;"	function	line:2
getAllKeys	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/getjsprops.js	/^  var getAllKeys = function(obj) {$/;"	function	line:11
_.getAllKeys	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/getjsprops.js	/^  var getAllKeys = function(obj) {$/;"	function	line:11
_	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/getjsprops.js	/^var _ = function() {$/;"	function	line:1
b:did_ftplugin	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/ftplugin/javascript.vim	/^let b:did_ftplugin = 1$/;"	variable	line:10
s:cpo_save	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/ftplugin/javascript.vim	/^let s:cpo_save = &cpo$/;"	variable	line:12
b:browsefilter	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/ftplugin/javascript.vim	/^    let  b:browsefilter="Javascript Files (*.js)\\t*.js\\n" .$/;"	variable	line:31
b:undo_ftplugin	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/ftplugin/javascript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<" $/;"	variable	line:35
g:vimjs#casesensitive	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let g:vimjs#casesensitive = 1$/;"	variable	line:8
g:vimjs#smartcomplete	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let g:vimjs#smartcomplete = 0$/;"	variable	line:12
s:keywords	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:keywords = ['abstract', 'boolean', 'break', 'byte', 'case', 'catch', 'char', 'class', 'continue', 'debugger', 'default', 'delete', 'do', 'double ', 'else', 'enum', 'export', 'extends', 'false', 'final', 'finally', 'float', 'for', 'function', 'goto', 'if', 'implements', 'import', 'in ', 'instanceof', 'int', 'interface', 'long', 'native', 'new', 'null', 'package', 'private', 'protected', 'public', 'return', 'short', 'static', 'super ', 'switch', 'synchronized', 'this', 'throw', 'throws', 'transient', 'true', 'try', 'typeof', 'var', 'void', 'volatile', 'while', 'with', 'console']$/;"	variable	line:15
s:chromeo	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromeo = ['Event(', 'app', 'bookmarks', 'browserAction', 'commands', 'csi(', 'downloads', 'extension', 'history', 'i18n', 'loadTimes(', 'management', 'permissions', 'runtime', 'sessions', 'storage', 'tabs', 'test', 'topSites', 'types', 'windows']$/;"	variable	line:18
s:chrometabs	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chrometabs = ['captureVisibleTab(', 'connect(', 'create(', 'detectLanguage(', 'duplicate(', 'executeScript(', 'get(', 'getAllInWindow(', 'getCurrent(', 'getSelected(', 'highlight(', 'insertCSS(', 'move(', 'onActivated', 'onActiveChanged', 'onAttached', 'onCreated', 'onDetached', 'onHighlightChanged', 'onHighlighted', 'onMoved', 'onRemoved', 'onReplaced', 'onSelectionChanged', 'onUpdated', 'query(', 'reload(', 'remove(', 'sendMessage(', 'sendRequest(', 'update(']$/;"	variable	line:19
s:chromehist	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromehist = ['addUrl(', 'deleteAll(', 'deleteRange(', 'deleteUrl(', 'getVisits(', 'onVisitRemoved', 'onVisited', 'search(']$/;"	variable	line:20
s:chromemarks	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromemarks = ['MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE', 'MAX_WRITE_OPERATIONS_PER_HOUR', 'create(', 'get(', 'getChildren(', 'getRecent(', 'getSubTree(', 'getTree(', 'move(', 'onChanged', 'onChildrenReordered', 'onCreated', 'onImportBegan', 'onImportEnded', 'onMoved', 'onRemoved', 'remove(', 'removeTree(', 'search(', 'update(']$/;"	variable	line:21
s:chromecomm	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromecomm = ['getAll(', 'onCommand']$/;"	variable	line:22
s:chromewins	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromewins = ['WINDOW_ID_CURRENT', 'WINDOW_ID_NONE', 'create(', 'get(', 'getAll(', 'getCurrent(', 'getLastFocused(', 'onCreated', 'onFocusChanged', 'onRemoved', 'remove(', 'update(']$/;"	variable	line:23
s:chromeext	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromeext = ['connect(', 'connectNative(', 'getBackgroundPage(', 'getURL(', 'getViews(', 'inIncognitoContext', 'isAllowedFileSchemeAccess(', 'isAllowedIncognitoAccess(', 'onConnect', 'onConnectExternal', 'onMessage', 'onMessageExternal', 'onRequest', 'onRequestExternal', 'sendMessage(', 'sendNativeMessage(', 'sendRequest(', 'setUpdateUrlData(']$/;"	variable	line:24
s:chromerunt	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromerunt = ['connect(', 'connectNative(', 'getBackgroundPage(', 'getManifest(', 'getPackageDirectoryEntry(', 'getPlatformInfo(', 'getURL(', 'id', 'onBrowserUpdateAvailable', 'onConnect', 'onConnectExternal', 'onInstalled', 'onMessage', 'onMessageExternal', 'onRestartRequired', 'onStartup', 'onSuspend', 'onSuspendCanceled', 'onUpdateAvailable', 'reload(', 'requestUpdateCheck(', 'restart(', 'sendMessage(', 'sendNativeMessage(', 'setUninstallURL(']$/;"	variable	line:25
s:chrometops	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chrometops = ['get(']$/;"	variable	line:26
s:chromebact	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromebact = ['disable(', 'enable(', 'getBadgeBackgroundColor(', 'getBadgeText(', 'getPopup(', 'getTitle(', 'onClicked', 'openPopup(', 'setBadgeBackgroundColor(', 'setBadgeText(', 'setIcon(', 'setPopup(', 'setTitle(']$/;"	variable	line:27
s:chromeapp	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromeapp = ['getDetails(', 'getDetailsForFrame(', 'getIsInstalled(', 'installState(', 'isInstalled', 'runningState(']$/;"	variable	line:28
s:chromedown	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromedown = ['acceptDanger(', 'cancel(', 'download(', 'drag(', 'erase(', 'getFileIcon(', 'onChanged', 'onCreated', 'onDeterminingFilename', 'onErased', 'open(', 'pause(', 'removeFile(', 'resume(', 'search(', 'setShelfEnabled(', 'show(', 'showDefaultFolder(']$/;"	variable	line:29
s:chromeman	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromeman = ['getPermissionWarningsByManifest(', 'uninstallSelf(']$/;"	variable	line:30
s:chromeperm	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromeperm = ['contains(', 'getAll(', 'onAdded', 'onRemoved', 'remove(', 'request(']$/;"	variable	line:31
s:chromesess	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromesess = ['MAX_SESSION_RESULTS', 'getDevices(', 'getRecentlyClosed(', 'onChanged', 'restore(']$/;"	variable	line:32
s:chromestor	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromestor = ['local', 'managed', 'onChanged', 'sync']$/;"	variable	line:33
s:chromestorsync	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromestorsync = ['MAX_ITEMS', 'MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE', 'MAX_WRITE_OPERATIONS_PER_HOUR', 'QUOTA_BYTES', 'QUOTA_BYTES_PER_ITEM', 'clear(', 'functionSchemas', 'get(', 'getBytesInUse(', 'remove(', 'set(', 'setSchema(']$/;"	variable	line:34
s:chromestorloc	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let s:chromestorloc = ['QUOTA_BYTES', 'clear(', 'functionSchemas', 'get(', 'getBytesInUse(', 'remove(', 'set(', 'setSchema(']$/;"	variable	line:35
g:vimjs#chromeapis	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^  let g:vimjs#chromeapis = 0$/;"	variable	line:37
s:winds	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:winds = ['AnalyserNode(', 'ApplicationCache(', 'ApplicationCacheErrorEvent(', 'Array(', 'ArrayBuffer(', 'Attr(', 'Audio(', 'AudioBuffer(', 'AudioBufferSourceNode(', 'AudioContext(', 'AudioDestinationNode(', 'AudioListener(', 'AudioNode(', 'AudioParam(', 'AudioProcessingEvent(', 'AutocompleteErrorEvent(', 'BarProp(', 'BeforeUnloadEvent(', 'BiquadFilterNode(', 'Blob(', 'Boolean(', 'CDATASection(', 'CSS', 'CSSCharsetRule(', 'CSSFontFaceRule(', 'CSSImportRule(', 'CSSKeyframeRule(', 'CSSKeyframesRule(', 'CSSMediaRule(', 'CSSPageRule(', 'CSSPrimitiveValue(', 'CSSRule(', 'CSSRuleList(', 'CSSStyleDeclaration(', 'CSSStyleRule(', 'CSSStyleSheet(', 'CSSUnknownRule(', 'CSSValue(', 'CSSValueList(', 'CSSViewportRule(', 'CanvasGradient(', 'CanvasPattern(', 'CanvasRenderingContext2D(', 'ChannelMergerNode(', 'ChannelSplitterNode(', 'CharacterData(', 'ClientRect(', 'ClientRectList(', 'CloseEvent(', 'Comment(', 'CompositionEvent(', 'ConvolverNode(', 'Counter(', 'CustomEvent(', 'DOMError(', 'DOMException(', 'DOMImplementation(', 'DOMParser(', 'DOMSettableTokenList(', 'DOMStringList(', 'DOMStringMap(', 'DOMTokenList(', 'DataTransfer(', 'DataTransferItemList(', 'DataView(', 'Date(', 'DelayNode(', 'DeviceMotionEvent(', 'DeviceOrientationEvent(', 'Document(', 'DocumentFragment(', 'DocumentType(', 'DynamicsCompressorNode(', 'Element(', 'Error(', 'ErrorEvent(', 'EvalError(', 'Event(', 'EventSource(', 'EventTarget(', 'File(', 'FileError(', 'FileList(', 'FileReader(', 'Float32Array(', 'Float64Array(', 'FocusEvent(', 'FontFace(', 'FormData(', 'Function(', 'GainNode(', 'Gamepad(', 'GamepadEvent(', 'HTMLAllCollection(', 'HTMLAnchorElement(', 'HTMLAppletElement(', 'HTMLAreaElement(', 'HTMLAudioElement(', 'HTMLBRElement(', 'HTMLBaseElement(', 'HTMLBodyElement(', 'HTMLButtonElement(', 'HTMLCanvasElement(', 'HTMLCollection(', 'HTMLContentElement(', 'HTMLDListElement(', 'HTMLDataListElement(', 'HTMLDialogElement(', 'HTMLDirectoryElement(', 'HTMLDivElement(', 'HTMLDocument(', 'HTMLElement(', 'HTMLEmbedElement(', 'HTMLFieldSetElement(', 'HTMLFontElement(', 'HTMLFormControlsCollection(', 'HTMLFormElement(', 'HTMLFrameElement(', 'HTMLFrameSetElement(', 'HTMLHRElement(', 'HTMLHeadElement(', 'HTMLHeadingElement(', 'HTMLHtmlElement(', 'HTMLIFrameElement(', 'HTMLImageElement(', 'HTMLInputElement(', 'HTMLKeygenElement(', 'HTMLLIElement(', 'HTMLLabelElement(', 'HTMLLegendElement(', 'HTMLLinkElement(', 'HTMLMapElement(', 'HTMLMarqueeElement(', 'HTMLMediaElement(', 'HTMLMenuElement(', 'HTMLMetaElement(', 'HTMLMeterElement(', 'HTMLModElement(', 'HTMLOListElement(', 'HTMLObjectElement(', 'HTMLOptGroupElement(', 'HTMLOptionElement(', 'HTMLOptionsCollection(', 'HTMLOutputElement(', 'HTMLParagraphElement(', 'HTMLParamElement(', 'HTMLPreElement(', 'HTMLProgressElement(', 'HTMLQuoteElement(', 'HTMLScriptElement(', 'HTMLSelectElement(', 'HTMLShadowElement(', 'HTMLSourceElement(', 'HTMLSpanElement(', 'HTMLStyleElement(', 'HTMLTableCaptionElement(', 'HTMLTableCellElement(', 'HTMLTableColElement(', 'HTMLTableElement(', 'HTMLTableRowElement(', 'HTMLTableSectionElement(', 'HTMLTemplateElement(', 'HTMLTextAreaElement(', 'HTMLTitleElement(', 'HTMLTrackElement(', 'HTMLUListElement(', 'HTMLUnknownElement(', 'HTMLVideoElement(', 'HashChangeEvent(', 'History(', 'IDBCursor(', 'IDBCursorWithValue(', 'IDBDatabase(', 'IDBFactory(', 'IDBIndex(', 'IDBKeyRange(', 'IDBObjectStore(', 'IDBOpenDBRequest(', 'IDBRequest(', 'IDBTransaction(', 'IDBVersionChangeEvent(', 'Image(', 'ImageBitmap(', 'ImageData(', 'Infinity', 'InputMethodContext(', 'Int16Array(', 'Int32Array(', 'Int8Array(', 'Intl', 'JSON', 'KeyboardEvent(', 'Location(', 'Map(', 'Math', 'MediaElementAudioSourceNode(', 'MediaError(', 'MediaKeyError(', 'MediaKeyEvent(', 'MediaList(', 'MediaSource(', 'MediaStreamAudioDestinationNode(', 'MediaStreamAudioSourceNode(', 'MediaStreamEvent(', 'MediaStreamTrack(', 'MessageChannel(', 'MessageEvent(', 'MessagePort(', 'MimeType(', 'MimeTypeArray(', 'MouseEvent(', 'MutationEvent(', 'MutationObserver(', 'MutationRecord(', 'NaN', 'NamedNodeMap(', 'Navigator(', 'Node(', 'NodeFilter(', 'NodeIterator(', 'NodeList(', 'Notation(', 'Notification(', 'Number(', 'Object(', 'OfflineAudioCompletionEvent(', 'OfflineAudioContext(', 'Option(', 'OscillatorNode(', 'OverflowEvent(', 'PERSISTENT', 'PageTransitionEvent(', 'Path2D(', 'Performance(', 'PerformanceEntry(', 'PerformanceMark(', 'PerformanceMeasure(', 'PerformanceNavigation(', 'PerformanceResourceTiming(', 'PerformanceTiming(', 'PeriodicWave(', 'Plugin(', 'PluginArray(', 'PopStateEvent(', 'ProcessingInstruction(', 'ProgressEvent(', 'Promise(', 'Proxy', 'RGBColor(', 'RTCIceCandidate(', 'RTCSessionDescription(', 'Range(', 'RangeError(', 'Rect(', 'ReferenceError(', 'RegExp(', 'SVGAElement(', 'SVGAltGlyphDefElement(', 'SVGAltGlyphElement(', 'SVGAltGlyphItemElement(', 'SVGAngle(', 'SVGAnimateElement(', 'SVGAnimateMotionElement(', 'SVGAnimateTransformElement(', 'SVGAnimatedAngle(', 'SVGAnimatedBoolean(', 'SVGAnimatedEnumeration(', 'SVGAnimatedInteger(', 'SVGAnimatedLength(', 'SVGAnimatedLengthList(', 'SVGAnimatedNumber(', 'SVGAnimatedNumberList(', 'SVGAnimatedPreserveAspectRatio(', 'SVGAnimatedRect(', 'SVGAnimatedString(', 'SVGAnimatedTransformList(', 'SVGAnimationElement(', 'SVGCircleElement(', 'SVGClipPathElement(', 'SVGComponentTransferFunctionElement(', 'SVGCursorElement(', 'SVGDefsElement(', 'SVGDescElement(', 'SVGDiscardElement(', 'SVGElement(', 'SVGEllipseElement(', 'SVGFEBlendElement(', 'SVGFEColorMatrixElement(', 'SVGFEComponentTransferElement(', 'SVGFECompositeElement(', 'SVGFEConvolveMatrixElement(', 'SVGFEDiffuseLightingElement(', 'SVGFEDisplacementMapElement(', 'SVGFEDistantLightElement(', 'SVGFEDropShadowElement(', 'SVGFEFloodElement(', 'SVGFEFuncAElement(', 'SVGFEFuncBElement(', 'SVGFEFuncGElement(', 'SVGFEFuncRElement(', 'SVGFEGaussianBlurElement(', 'SVGFEImageElement(', 'SVGFEMergeElement(', 'SVGFEMergeNodeElement(', 'SVGFEMorphologyElement(', 'SVGFEOffsetElement(', 'SVGFEPointLightElement(', 'SVGFESpecularLightingElement(', 'SVGFESpotLightElement(', 'SVGFETileElement(', 'SVGFETurbulenceElement(', 'SVGFilterElement(', 'SVGFontElement(', 'SVGFontFaceElement(', 'SVGFontFaceFormatElement(', 'SVGFontFaceNameElement(', 'SVGFontFaceSrcElement(', 'SVGFontFaceUriElement(', 'SVGForeignObjectElement(', 'SVGGElement(', 'SVGGeometryElement(', 'SVGGlyphElement(', 'SVGGlyphRefElement(', 'SVGGradientElement(', 'SVGGraphicsElement(', 'SVGHKernElement(', 'SVGImageElement(', 'SVGLength(', 'SVGLengthList(', 'SVGLineElement(', 'SVGLinearGradientElement(', 'SVGMPathElement(', 'SVGMarkerElement(', 'SVGMaskElement(', 'SVGMatrix(', 'SVGMetadataElement(', 'SVGMissingGlyphElement(', 'SVGNumber(', 'SVGNumberList(', 'SVGPathElement(', 'SVGPathSeg(', 'SVGPathSegArcAbs(', 'SVGPathSegArcRel(', 'SVGPathSegClosePath(', 'SVGPathSegCurvetoCubicAbs(', 'SVGPathSegCurvetoCubicRel(', 'SVGPathSegCurvetoCubicSmoothAbs(', 'SVGPathSegCurvetoCubicSmoothRel(', 'SVGPathSegCurvetoQuadraticAbs(', 'SVGPathSegCurvetoQuadraticRel(', 'SVGPathSegCurvetoQuadraticSmoothAbs(', 'SVGPathSegCurvetoQuadraticSmoothRel(', 'SVGPathSegLinetoAbs(', 'SVGPathSegLinetoHorizontalAbs(', 'SVGPathSegLinetoHorizontalRel(', 'SVGPathSegLinetoRel(', 'SVGPathSegLinetoVerticalAbs(', 'SVGPathSegLinetoVerticalRel(', 'SVGPathSegList(', 'SVGPathSegMovetoAbs(', 'SVGPathSegMovetoRel(', 'SVGPatternElement(', 'SVGPoint(', 'SVGPointList(', 'SVGPolygonElement(', 'SVGPolylineElement(', 'SVGPreserveAspectRatio(', 'SVGRadialGradientElement(', 'SVGRect(', 'SVGRectElement(', 'SVGRenderingIntent(', 'SVGSVGElement(', 'SVGScriptElement(', 'SVGSetElement(', 'SVGStopElement(', 'SVGStringList(', 'SVGStyleElement(', 'SVGSwitchElement(', 'SVGSymbolElement(', 'SVGTSpanElement(', 'SVGTextContentElement(', 'SVGTextElement(', 'SVGTextPathElement(', 'SVGTextPositioningElement(', 'SVGTitleElement(', 'SVGTransform(', 'SVGTransformList(', 'SVGUnitTypes(', 'SVGUseElement(', 'SVGVKernElement(', 'SVGViewElement(', 'SVGViewSpec(', 'SVGZoomEvent(', 'Screen(', 'ScriptProcessorNode(', 'Selection(', 'Set(', 'ShadowRoot(', 'SharedWorker(', 'SpeechSynthesisEvent(', 'SpeechSynthesisUtterance(', 'Storage(', 'StorageEvent(', 'String(', 'StyleSheet(', 'StyleSheetList(', 'Symbol(', 'SyntaxError(', 'TEMPORARY', 'Text(', 'TextEvent(', 'TextMetrics(', 'TextTrack(', 'TextTrackCue(', 'TextTrackCueList(', 'TextTrackList(', 'TimeRanges(', 'Touch(', 'TouchEvent(', 'TouchList(', 'TrackEvent(', 'TransitionEvent(', 'TreeWalker(', 'TypeError(', 'UIEvent(', 'URIError(', 'URL(', 'Uint16Array(', 'Uint32Array(', 'Uint8Array(', 'Uint8ClampedArray(', 'VTTCue(', 'ValidityState(', 'WaveShaperNode(', 'WeakMap(', 'WeakSet(', 'WebGLActiveInfo(', 'WebGLBuffer(', 'WebGLContextEvent(', 'WebGLFramebuffer(', 'WebGLProgram(', 'WebGLRenderbuffer(', 'WebGLRenderingContext(', 'WebGLShader(', 'WebGLShaderPrecisionFormat(', 'WebGLTexture(', 'WebGLUniformLocation(', 'WebKitAnimationEvent(', 'WebKitCSSFilterRule(', 'WebKitCSSFilterValue(', 'WebKitCSSMatrix(', 'WebKitCSSTransformValue(', 'WebKitGamepad(', 'WebKitMutationObserver(', 'WebKitPoint(', 'WebKitTransitionEvent(', 'WebSocket(', 'WheelEvent(', 'Window(', 'Worker(', 'XMLDocument(', 'XMLHttpRequest(', 'XMLHttpRequestProgressEvent(', 'XMLHttpRequestUpload(', 'XMLSerializer(', 'XPathEvaluator(', 'XPathExpression(', 'XPathResult(', 'XSLTProcessor(', 'addEventListener(', 'alert(', 'applicationCache', 'atob(', 'blur(', 'btoa(', 'cancelAnimationFrame(', 'captureEvents(', 'chrome', 'clearInterval(', 'clearTimeout(', 'clientInformation', 'close(', 'closed', 'confirm(', 'console', 'crypto', 'decodeURI(', 'decodeURIComponent(', 'defaultStatus', 'defaultstatus', 'devicePixelRatio', 'dispatchEvent(', 'document', 'encodeURI(', 'encodeURIComponent(', 'escape(', 'eval(', 'event', 'external', 'find(', 'focus(', 'frameElement', 'frames', 'getComputedStyle(', 'getMatchedCSSRules(', 'getSelection(', 'history', 'indexedDB', 'innerHeight', 'innerWidth', 'isFinite(', 'isNaN(', 'length', 'localStorage', 'location', 'locationbar', 'matchMedia(', 'menubar', 'moveBy(', 'moveTo(', 'name', 'navigator', 'offscreenBuffering', 'onabort', 'onautocomplete', 'onautocompleteerror', 'onbeforeunload', 'onblur', 'oncancel', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'onclose', 'oncontextmenu', 'oncuechange', 'ondblclick', 'ondevicemotion', 'ondeviceorientation', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onended', 'onerror', 'onfocus', 'onhashchange', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onlanguagechange', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadstart', 'onmessage', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onoffline', 'ononline', 'onpagehide', 'onpageshow', 'onpause', 'onplay', 'onplaying', 'onpopstate', 'onprogress', 'onratechange', 'onreset', 'onresize', 'onscroll', 'onsearch', 'onseeked', 'onseeking', 'onselect', 'onshow', 'onstalled', 'onstorage', 'onsubmit', 'onsuspend', 'ontimeupdate', 'ontoggle', 'ontransitionend', 'onunload', 'onvolumechange', 'onwaiting', 'onwebkitanimationend', 'onwebkitanimationiteration', 'onwebkitanimationstart', 'onwebkittransitionend', 'onwheel', 'open(', 'openDatabase(', 'opener', 'outerHeight', 'outerWidth', 'pageXOffset', 'pageYOffset', 'parent', 'parseFloat(', 'parseInt(', 'performance', 'personalbar', 'postMessage(', 'print(', 'prompt(', 'releaseEvents(', 'removeEventListener(', 'requestAnimationFrame(', 'resizeBy(', 'resizeTo(', 'screen', 'screenLeft', 'screenTop', 'screenX', 'screenY', 'scroll(', 'scrollBy(', 'scrollTo(', 'scrollX', 'scrollY', 'scrollbars', 'self', 'sessionStorage', 'setInterval(', 'setTimeout(', 'showModalDialog(', 'speechSynthesis', 'status', 'statusbar', 'stop(', 'styleMedia', 'toolbar', 'top', 'undefined', 'unescape(', 'webkitAudioContext(', 'webkitCancelAnimationFrame(', 'webkitCancelRequestAnimationFrame(', 'webkitConvertPointFromNodeToPage(', 'webkitConvertPointFromPageToNode(', 'webkitIDBCursor(', 'webkitIDBDatabase(', 'webkitIDBFactory(', 'webkitIDBIndex(', 'webkitIDBKeyRange(', 'webkitIDBObjectStore(', 'webkitIDBRequest(', 'webkitIDBTransaction(', 'webkitIndexedDB', 'webkitMediaStream(', 'webkitOfflineAudioContext(', 'webkitRTCPeerConnection(', 'webkitRequestAnimationFrame(', 'webkitRequestFileSystem(', 'webkitResolveLocalFileSystemURL(', 'webkitSpeechGrammar(', 'webkitSpeechGrammarList(', 'webkitSpeechRecognition(', 'webkitSpeechRecognitionError(', 'webkitSpeechRecognitionEvent(', 'webkitStorageInfo', 'webkitURL(', 'window']$/;"	variable	line:40
s:arrays	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:arrays = ['arguments', 'caller', 'concat(', 'constructor(', 'entries(', 'every(', 'fill(', 'filter(', 'find(', 'findIndex(', 'forEach(', 'indexOf(', 'isArray(', 'join(', 'keys(', 'lastIndexOf(', 'length', 'map(', 'name', 'observe(', 'pop(', 'prototype', 'push(', 'reduce(', 'reduceRight(', 'reverse(', 'shift(', 'slice(', 'some(', 'sort(', 'splice(', 'toLocaleString(', 'toString(', 'unobserve(', 'unshift(', 'values(']$/;"	variable	line:42
s:dates	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:dates = ['UTC(', 'arguments', 'caller', 'constructor(', 'getDate(', 'getDay(', 'getFullYear(', 'getHours(', 'getMilliseconds(', 'getMinutes(', 'getMonth(', 'getSeconds(', 'getTime(', 'getTimezoneOffset(', 'getUTCDate(', 'getUTCDay(', 'getUTCFullYear(', 'getUTCHours(', 'getUTCMilliseconds(', 'getUTCMinutes(', 'getUTCMonth(', 'getUTCSeconds(', 'getYear(', 'length', 'name', 'now(', 'parse(', 'prototype', 'setDate(', 'setFullYear(', 'setHours(', 'setMilliseconds(', 'setMinutes(', 'setMonth(', 'setSeconds(', 'setTime(', 'setUTCDate(', 'setUTCFullYear(', 'setUTCHours(', 'setUTCMilliseconds(', 'setUTCMinutes(', 'setUTCMonth(', 'setUTCSeconds(', 'setYear(', 'toDateString(', 'toGMTString(', 'toISOString(', 'toJSON(', 'toLocaleDateString(', 'toLocaleString(', 'toLocaleTimeString(', 'toString(', 'toTimeString(', 'toUTCString(', 'valueOf(']$/;"	variable	line:44
s:funcs	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:funcs = ['apply(', 'arguments', 'bind(', 'call(', 'caller', 'constructor(', 'length', 'name', 'prototype', 'prototype(', 'toString(']$/;"	variable	line:46
s:maths	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:maths = ['E', 'LN10', 'LN2', 'LOG10E', 'LOG2E', 'PI', 'SQRT1_2', 'SQRT2', 'abs(', 'acos(', 'acosh(', 'asin(', 'asinh(', 'atan(', 'atan2(', 'atanh(', 'cbrt(', 'ceil(', 'clz32(', 'cos(', 'cosh(', 'exp(', 'expm1(', 'floor(', 'fround(', 'hypot(', 'imul(', 'log(', 'log10(', 'log1p(', 'log2(', 'max(', 'min(', 'pow(', 'random(', 'round(', 'sign(', 'sin(', 'sinh(', 'sqrt(', 'tan(', 'tanh(', 'trunc(']$/;"	variable	line:48
s:numbs	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:numbs = ['EPSILON', 'MAX_SAFE_INTEGER', 'MAX_VALUE', 'MIN_SAFE_INTEGER', 'MIN_VALUE', 'NEGATIVE_INFINITY', 'NaN', 'POSITIVE_INFINITY', 'arguments', 'caller', 'constructor(', 'isFinite(', 'isInteger(', 'isNaN(', 'isSafeInteger(', 'length', 'name', 'parseFloat(', 'parseInt(', 'prototype', 'toExponential(', 'toFixed(', 'toLocaleString(', 'toPrecision(', 'toString(', 'valueOf(']$/;"	variable	line:50
s:evnts	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:evnts = ['AT_TARGET', 'BLUR', 'BUBBLING_PHASE', 'CAPTURING_PHASE', 'CHANGE', 'CLICK', 'DBLCLICK', 'DOM_KEY_LOCATION_LEFT', 'DOM_KEY_LOCATION_NUMPAD', 'DOM_KEY_LOCATION_RIGHT', 'DOM_KEY_LOCATION_STANDARD', 'DRAGDROP', 'FOCUS', 'KEYDOWN', 'KEYPRESS', 'KEYUP', 'MOUSEDOWN', 'MOUSEDRAG', 'MOUSEMOVE', 'MOUSEOUT', 'MOUSEOVER', 'MOUSEUP', 'NONE', 'SELECT', 'altGraphKey', 'altKey', 'bubbles', 'button', 'cancelBubble', 'cancelable', 'charCode', 'clientX', 'clientY', 'clipboardData', 'ctrlKey', 'currentTarget', 'dataTransfer', 'defaultPrevented', 'detail', 'eventPhase', 'fromElement', 'getModifierState(', 'initEvent(', 'initKeyboardEvent(', 'initMouseEvent(', 'initUIEvent(', 'keyCode', 'keyIdentifier', 'keyLocation', 'layerX', 'layerY', 'location', 'metaKey', 'movementX', 'movementY', 'offsetX', 'offsetY', 'pageX', 'pageY', 'path', 'preventDefault(', 'relatedTarget', 'repeat', 'returnValue', 'screenX', 'screenY', 'shiftKey', 'srcElement', 'stopImmediatePropagation(', 'stopPropagation(', 'target', 'timeStamp', 'toElement', 'type', 'view', 'webkitMovementX', 'webkitMovementY', 'which', 'x', 'y']$/;"	variable	line:52
s:locas	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:locas = ['ancestorOrigins', 'assign(', 'hash', 'host', 'hostname', 'href', 'origin', 'pathname', 'port', 'protocol', 'reload(', 'replace(', 'search', 'toString(', 'valueOf(']$/;"	variable	line:54
s:objes	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:objes = ['arguments', 'caller', 'constructor(', 'create(', 'defineProperties(', 'defineProperty(', 'deliverChangeRecords(', 'freeze(', 'getNotifier(', 'getOwnPropertyDescriptor(', 'getOwnPropertyNames(', 'getOwnPropertySymbols(', 'getPrototypeOf(', 'hasOwnProperty(', 'is(', 'isExtensible(', 'isFrozen(', 'isPrototypeOf(', 'isSealed(', 'keys(', 'length', 'name', 'observe(', 'preventExtensions(', 'propertyIsEnumerable(', 'prototype', 'seal(', 'setPrototypeOf(', 'toLocaleString(', 'toString(', 'unobserve(', 'valueOf(']$/;"	variable	line:56
s:reges	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:reges = ['arguments', 'caller', 'compile(', 'constructor(', 'exec(', 'global', 'ignoreCase', 'input', 'lastIndex', 'lastMatch', 'lastParen', 'leftContext', 'length', 'multiline', 'name', 'prototype', 'rightContext', 'source', 'test(', 'toString(']$/;"	variable	line:58
s:stris	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:stris = ['anchor(', 'arguments', 'big(', 'blink(', 'bold(', 'caller', 'charAt(', 'charCodeAt(', 'concat(', 'constructor(', 'contains(', 'endsWith(', 'fixed(', 'fontcolor(', 'fontsize(', 'fromCharCode(', 'indexOf(', 'italics(', 'lastIndexOf(', 'length', 'link(', 'localeCompare(', 'match(', 'name', 'normalize(', 'prototype', 'repeat(', 'replace(', 'search(', 'slice(', 'small(', 'split(', 'startsWith(', 'strike(', 'sub(', 'substr(', 'substring(', 'sup(', 'toLocaleLowerCase(', 'toLocaleUpperCase(', 'toLowerCase(', 'toString(', 'toUpperCase(', 'trim(', 'trimLeft(', 'trimRight(', 'valueOf(']$/;"	variable	line:60
s:webgl	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:webgl = ['ACTIVE_ATTRIBUTES', 'ACTIVE_TEXTURE', 'ACTIVE_UNIFORMS', 'ALIASED_LINE_WIDTH_RANGE', 'ALIASED_POINT_SIZE_RANGE', 'ALPHA', 'ALPHA_BITS', 'ALWAYS', 'ARRAY_BUFFER', 'ARRAY_BUFFER_BINDING', 'ATTACHED_SHADERS', 'BACK', 'BLEND', 'BLEND_COLOR', 'BLEND_DST_ALPHA', 'BLEND_DST_RGB', 'BLEND_EQUATION', 'BLEND_EQUATION_ALPHA', 'BLEND_EQUATION_RGB', 'BLEND_SRC_ALPHA', 'BLEND_SRC_RGB', 'BLUE_BITS', 'BOOL', 'BOOL_VEC2', 'BOOL_VEC3', 'BOOL_VEC4', 'BROWSER_DEFAULT_WEBGL', 'BUFFER_SIZE', 'BUFFER_USAGE', 'BYTE', 'CCW', 'CLAMP_TO_EDGE', 'COLOR_ATTACHMENT0', 'COLOR_BUFFER_BIT', 'COLOR_CLEAR_VALUE', 'COLOR_WRITEMASK', 'COMPILE_STATUS', 'COMPRESSED_TEXTURE_FORMATS', 'CONSTANT_ALPHA', 'CONSTANT_COLOR', 'CONTEXT_LOST_WEBGL', 'CULL_FACE', 'CULL_FACE_MODE', 'CURRENT_PROGRAM', 'CURRENT_VERTEX_ATTRIB', 'CW', 'DECR', 'DECR_WRAP', 'DELETE_STATUS', 'DEPTH_ATTACHMENT', 'DEPTH_BITS', 'DEPTH_BUFFER_BIT', 'DEPTH_CLEAR_VALUE', 'DEPTH_COMPONENT', 'DEPTH_COMPONENT16', 'DEPTH_FUNC', 'DEPTH_RANGE', 'DEPTH_STENCIL', 'DEPTH_STENCIL_ATTACHMENT', 'DEPTH_TEST', 'DEPTH_WRITEMASK', 'DITHER', 'DONT_CARE', 'DST_ALPHA', 'DST_COLOR', 'DYNAMIC_DRAW', 'ELEMENT_ARRAY_BUFFER', 'ELEMENT_ARRAY_BUFFER_BINDING', 'EQUAL', 'FASTEST', 'FLOAT', 'FLOAT_MAT2', 'FLOAT_MAT3', 'FLOAT_MAT4', 'FLOAT_VEC2', 'FLOAT_VEC3', 'FLOAT_VEC4', 'FRAGMENT_SHADER', 'FRAMEBUFFER', 'FRAMEBUFFER_ATTACHMENT_OBJECT_NAME', 'FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE', 'FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE', 'FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL', 'FRAMEBUFFER_BINDING', 'FRAMEBUFFER_COMPLETE', 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT', 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS', 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT', 'FRAMEBUFFER_UNSUPPORTED', 'FRONT', 'FRONT_AND_BACK', 'FRONT_FACE', 'FUNC_ADD', 'FUNC_REVERSE_SUBTRACT', 'FUNC_SUBTRACT', 'GENERATE_MIPMAP_HINT', 'GEQUAL', 'GREATER', 'GREEN_BITS', 'HIGH_FLOAT', 'HIGH_INT', 'IMPLEMENTATION_COLOR_READ_FORMAT', 'IMPLEMENTATION_COLOR_READ_TYPE', 'INCR', 'INCR_WRAP', 'INT', 'INT_VEC2', 'INT_VEC3', 'INT_VEC4', 'INVALID_ENUM', 'INVALID_FRAMEBUFFER_OPERATION', 'INVALID_OPERATION', 'INVALID_VALUE', 'INVERT', 'KEEP', 'LEQUAL', 'LESS', 'LINEAR', 'LINEAR_MIPMAP_LINEAR', 'LINEAR_MIPMAP_NEAREST', 'LINES', 'LINE_LOOP', 'LINE_STRIP', 'LINE_WIDTH', 'LINK_STATUS', 'LOW_FLOAT', 'LOW_INT', 'LUMINANCE', 'LUMINANCE_ALPHA', 'MAX_COMBINED_TEXTURE_IMAGE_UNITS', 'MAX_CUBE_MAP_TEXTURE_SIZE', 'MAX_FRAGMENT_UNIFORM_VECTORS', 'MAX_RENDERBUFFER_SIZE', 'MAX_TEXTURE_IMAGE_UNITS', 'MAX_TEXTURE_SIZE', 'MAX_VARYING_VECTORS', 'MAX_VERTEX_ATTRIBS', 'MAX_VERTEX_TEXTURE_IMAGE_UNITS', 'MAX_VERTEX_UNIFORM_VECTORS', 'MAX_VIEWPORT_DIMS', 'MEDIUM_FLOAT', 'MEDIUM_INT', 'MIRRORED_REPEAT', 'NEAREST', 'NEAREST_MIPMAP_LINEAR', 'NEAREST_MIPMAP_NEAREST', 'NEVER', 'NICEST', 'NONE', 'NOTEQUAL', 'NO_ERROR', 'ONE', 'ONE_MINUS_CONSTANT_ALPHA', 'ONE_MINUS_CONSTANT_COLOR', 'ONE_MINUS_DST_ALPHA', 'ONE_MINUS_DST_COLOR', 'ONE_MINUS_SRC_ALPHA', 'ONE_MINUS_SRC_COLOR', 'OUT_OF_MEMORY', 'PACK_ALIGNMENT', 'POINTS', 'POLYGON_OFFSET_FACTOR', 'POLYGON_OFFSET_FILL', 'POLYGON_OFFSET_UNITS', 'RED_BITS', 'RENDERBUFFER', 'RENDERBUFFER_ALPHA_SIZE', 'RENDERBUFFER_BINDING', 'RENDERBUFFER_BLUE_SIZE', 'RENDERBUFFER_DEPTH_SIZE', 'RENDERBUFFER_GREEN_SIZE', 'RENDERBUFFER_HEIGHT', 'RENDERBUFFER_INTERNAL_FORMAT', 'RENDERBUFFER_RED_SIZE', 'RENDERBUFFER_STENCIL_SIZE', 'RENDERBUFFER_WIDTH', 'RENDERER', 'REPEAT', 'REPLACE', 'RGB', 'RGB565', 'RGB5_A1', 'RGBA', 'RGBA4', 'SAMPLER_2D', 'SAMPLER_CUBE', 'SAMPLES', 'SAMPLE_ALPHA_TO_COVERAGE', 'SAMPLE_BUFFERS', 'SAMPLE_COVERAGE', 'SAMPLE_COVERAGE_INVERT', 'SAMPLE_COVERAGE_VALUE', 'SCISSOR_BOX', 'SCISSOR_TEST', 'SHADER_TYPE', 'SHADING_LANGUAGE_VERSION', 'SHORT', 'SRC_ALPHA', 'SRC_ALPHA_SATURATE', 'SRC_COLOR', 'STATIC_DRAW', 'STENCIL_ATTACHMENT', 'STENCIL_BACK_FAIL', 'STENCIL_BACK_FUNC', 'STENCIL_BACK_PASS_DEPTH_FAIL', 'STENCIL_BACK_PASS_DEPTH_PASS', 'STENCIL_BACK_REF', 'STENCIL_BACK_VALUE_MASK', 'STENCIL_BACK_WRITEMASK', 'STENCIL_BITS', 'STENCIL_BUFFER_BIT', 'STENCIL_CLEAR_VALUE', 'STENCIL_FAIL', 'STENCIL_FUNC', 'STENCIL_INDEX', 'STENCIL_INDEX8', 'STENCIL_PASS_DEPTH_FAIL', 'STENCIL_PASS_DEPTH_PASS', 'STENCIL_REF', 'STENCIL_TEST', 'STENCIL_VALUE_MASK', 'STENCIL_WRITEMASK', 'STREAM_DRAW', 'SUBPIXEL_BITS', 'TEXTURE', 'TEXTURE0', 'TEXTURE1', 'TEXTURE10', 'TEXTURE11', 'TEXTURE12', 'TEXTURE13', 'TEXTURE14', 'TEXTURE15', 'TEXTURE16', 'TEXTURE17', 'TEXTURE18', 'TEXTURE19', 'TEXTURE2', 'TEXTURE20', 'TEXTURE21', 'TEXTURE22', 'TEXTURE23', 'TEXTURE24', 'TEXTURE25', 'TEXTURE26', 'TEXTURE27', 'TEXTURE28', 'TEXTURE29', 'TEXTURE3', 'TEXTURE30', 'TEXTURE31', 'TEXTURE4', 'TEXTURE5', 'TEXTURE6', 'TEXTURE7', 'TEXTURE8', 'TEXTURE9', 'TEXTURE_2D', 'TEXTURE_BINDING_2D', 'TEXTURE_BINDING_CUBE_MAP', 'TEXTURE_CUBE_MAP', 'TEXTURE_CUBE_MAP_NEGATIVE_X', 'TEXTURE_CUBE_MAP_NEGATIVE_Y', 'TEXTURE_CUBE_MAP_NEGATIVE_Z', 'TEXTURE_CUBE_MAP_POSITIVE_X', 'TEXTURE_CUBE_MAP_POSITIVE_Y', 'TEXTURE_CUBE_MAP_POSITIVE_Z', 'TEXTURE_MAG_FILTER', 'TEXTURE_MIN_FILTER', 'TEXTURE_WRAP_S', 'TEXTURE_WRAP_T', 'TRIANGLES', 'TRIANGLE_FAN', 'TRIANGLE_STRIP', 'UNPACK_ALIGNMENT', 'UNPACK_COLORSPACE_CONVERSION_WEBGL', 'UNPACK_FLIP_Y_WEBGL', 'UNPACK_PREMULTIPLY_ALPHA_WEBGL', 'UNSIGNED_BYTE', 'UNSIGNED_INT', 'UNSIGNED_SHORT', 'UNSIGNED_SHORT_4_4_4_4', 'UNSIGNED_SHORT_5_5_5_1', 'UNSIGNED_SHORT_5_6_5', 'VALIDATE_STATUS', 'VENDOR', 'VERSION', 'VERTEX_ATTRIB_ARRAY_BUFFER_BINDING', 'VERTEX_ATTRIB_ARRAY_ENABLED', 'VERTEX_ATTRIB_ARRAY_NORMALIZED', 'VERTEX_ATTRIB_ARRAY_POINTER', 'VERTEX_ATTRIB_ARRAY_SIZE', 'VERTEX_ATTRIB_ARRAY_STRIDE', 'VERTEX_ATTRIB_ARRAY_TYPE', 'VERTEX_SHADER', 'VIEWPORT', 'ZERO', 'activeTexture(', 'attachShader(', 'bindAttribLocation(', 'bindBuffer(', 'bindFramebuffer(', 'bindRenderbuffer(', 'bindTexture(', 'blendColor(', 'blendEquation(', 'blendEquationSeparate(', 'blendFunc(', 'blendFuncSeparate(', 'bufferData(', 'bufferSubData(', 'canvas', 'checkFramebufferStatus(', 'clear(', 'clearColor(', 'clearDepth(', 'clearStencil(', 'colorMask(', 'compileShader(', 'compressedTexImage2D(', 'compressedTexSubImage2D(', 'copyTexImage2D(', 'copyTexSubImage2D(', 'createBuffer(', 'createFramebuffer(', 'createProgram(', 'createRenderbuffer(', 'createShader(', 'createTexture(', 'cullFace(', 'deleteBuffer(', 'deleteFramebuffer(', 'deleteProgram(', 'deleteRenderbuffer(', 'deleteShader(', 'deleteTexture(', 'depthFunc(', 'depthMask(', 'depthRange(', 'detachShader(', 'disable(', 'disableVertexAttribArray(', 'drawArrays(', 'drawElements(', 'drawingBufferHeight', 'drawingBufferWidth', 'enable(', 'enableVertexAttribArray(', 'finish(', 'flush(', 'framebufferRenderbuffer(', 'framebufferTexture2D(', 'frontFace(', 'generateMipmap(', 'getActiveAttrib(', 'getActiveUniform(', 'getAttachedShaders(', 'getAttribLocation(', 'getBufferParameter(', 'getContextAttributes(', 'getError(', 'getExtension(', 'getFramebufferAttachmentParameter(', 'getParameter(', 'getProgramInfoLog(', 'getProgramParameter(', 'getRenderbufferParameter(', 'getShaderInfoLog(', 'getShaderParameter(', 'getShaderPrecisionFormat(', 'getShaderSource(', 'getSupportedExtensions(', 'getTexParameter(', 'getUniform(', 'getUniformLocation(', 'getVertexAttrib(', 'getVertexAttribOffset(', 'hint(', 'isBuffer(', 'isContextLost(', 'isEnabled(', 'isFramebuffer(', 'isProgram(', 'isRenderbuffer(', 'isShader(', 'isTexture(', 'lineWidth(', 'linkProgram(', 'pixelStorei(', 'polygonOffset(', 'readPixels(', 'renderbufferStorage(', 'sampleCoverage(', 'scissor(', 'shaderSource(', 'stencilFunc(', 'stencilFuncSeparate(', 'stencilMask(', 'stencilMaskSeparate(', 'stencilOp(', 'stencilOpSeparate(', 'texImage2D(', 'texParameterf(', 'texParameteri(', 'texSubImage2D(', 'uniform1f(', 'uniform1fv(', 'uniform1i(', 'uniform1iv(', 'uniform2f(', 'uniform2fv(', 'uniform2i(', 'uniform2iv(', 'uniform3f(', 'uniform3fv(', 'uniform3i(', 'uniform3iv(', 'uniform4f(', 'uniform4fv(', 'uniform4i(', 'uniform4iv(', 'uniformMatrix2fv(', 'uniformMatrix3fv(', 'uniformMatrix4fv(', 'useProgram(', 'validateProgram(', 'vertexAttrib1f(', 'vertexAttrib1fv(', 'vertexAttrib2f(', 'vertexAttrib2fv(', 'vertexAttrib3f(', 'vertexAttrib3fv(', 'vertexAttrib4f(', 'vertexAttrib4fv(', 'vertexAttribPointer(', 'viewport(']$/;"	variable	line:62
s:ctxs	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:ctxs = ['arc(', 'arcTo(', 'arguments', 'beginPath(', 'bezierCurveTo(', 'caller', 'canvas', 'clearRect(', 'clearShadow(', 'clip(', 'closePath(', 'constructor(', 'createImageData(', 'createLinearGradient(', 'createPattern(', 'createRadialGradient(', 'drawFocusIfNeeded(', 'drawImage(', 'drawImageFromRect(', 'ellipse(', 'fill(', 'fillRect(', 'fillStyle', 'fillText(', 'font', 'getContextAttributes(', 'getImageData(', 'getLineDash(', 'globalAlpha', 'globalCompositeOperation', 'imageSmoothingEnabled', 'isPointInPath(', 'isPointInStroke(', 'length', 'lineCap', 'lineDashOffset', 'lineJoin', 'lineTo(', 'lineWidth', 'measureText(', 'miterLimit', 'moveTo(', 'name', 'prototype', 'putImageData(', 'quadraticCurveTo(', 'rect(', 'resetTransform(', 'restore(', 'rotate(', 'save(', 'scale(', 'setAlpha(', 'setCompositeOperation(', 'setFillColor(', 'setLineCap(', 'setLineDash(', 'setLineJoin(', 'setLineWidth(', 'setMiterLimit(', 'setShadow(', 'setStrokeColor(', 'setTransform(', 'shadowBlur', 'shadowColor', 'shadowOffsetX', 'shadowOffsetY', 'stroke(', 'strokeRect(', 'strokeStyle', 'strokeText(', 'textAlign', 'textBaseline', 'toString(', 'transform(', 'translate(', 'webkitImageSmoothingEnabled']$/;"	variable	line:64
s:storage	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:storage = ['arguments', 'caller', 'clear(', 'constructor(', 'getItem(', 'key(', 'length', 'name', 'prototype', 'removeItem(', 'setItem(', 'toString(']$/;"	variable	line:66
s:bodys	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:bodys = ['ALLOW_KEYBOARD_INPUT', 'ATTRIBUTE_NODE', 'CDATA_SECTION_NODE', 'COMMENT_NODE', 'DOCUMENT_FRAGMENT_NODE', 'DOCUMENT_NODE', 'DOCUMENT_POSITION_CONTAINED_BY', 'DOCUMENT_POSITION_CONTAINS', 'DOCUMENT_POSITION_DISCONNECTED', 'DOCUMENT_POSITION_FOLLOWING', 'DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC', 'DOCUMENT_POSITION_PRECEDING', 'DOCUMENT_TYPE_NODE', 'ELEMENT_NODE', 'ENTITY_NODE', 'ENTITY_REFERENCE_NODE', 'NOTATION_NODE', 'PROCESSING_INSTRUCTION_NODE', 'TEXT_NODE', 'aLink', 'accessKey', 'addEventListener(', 'animate(', 'appendChild(', 'attributes', 'background', 'baseURI', 'bgColor', 'blur(', 'childElementCount', 'childNodes', 'children', 'classList', 'className', 'click(', 'clientHeight', 'clientLeft', 'clientTop', 'clientWidth', 'cloneNode(', 'compareDocumentPosition(', 'contains(', 'contentEditable', 'createShadowRoot(', 'dataset', 'dir', 'dispatchEvent(', 'draggable', 'firstChild', 'firstElementChild', 'focus(', 'getAttribute(', 'getAttributeNS(', 'getAttributeNode(', 'getAttributeNodeNS(', 'getBoundingClientRect(', 'getClientRects(', 'getDestinationInsertionPoints(', 'getElementsByClassName(', 'getElementsByTagName(', 'getElementsByTagNameNS(', 'hasAttribute(', 'hasAttributeNS(', 'hasAttributes(', 'hasChildNodes(', 'hidden', 'id', 'innerHTML', 'innerText', 'insertAdjacentElement(', 'insertAdjacentHTML(', 'insertAdjacentText(', 'insertBefore(', 'isContentEditable', 'isDefaultNamespace(', 'isEqualNode(', 'isSameNode(', 'lang', 'lastChild', 'lastElementChild', 'link', 'localName', 'lookupNamespaceURI(', 'lookupPrefix(', 'matches(', 'namespaceURI', 'nextElementSibling', 'nextSibling', 'nodeName', 'nodeType', 'nodeValue', 'normalize(', 'offsetHeight', 'offsetLeft', 'offsetParent', 'offsetTop', 'offsetWidth', 'onabort', 'onautocomplete', 'onautocompleteerror', 'onbeforecopy', 'onbeforecut', 'onbeforepaste', 'onbeforeunload', 'onblur', 'oncancel', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'onclose', 'oncontextmenu', 'oncopy', 'oncuechange', 'oncut', 'ondblclick', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onended', 'onerror', 'onfocus', 'onhashchange', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onlanguagechange', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadstart', 'onmessage', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onoffline', 'ononline', 'onpagehide', 'onpageshow', 'onpaste', 'onpause', 'onplay', 'onplaying', 'onpopstate', 'onprogress', 'onratechange', 'onreset', 'onresize', 'onscroll', 'onsearch', 'onseeked', 'onseeking', 'onselect', 'onselectstart', 'onshow', 'onstalled', 'onstorage', 'onsubmit', 'onsuspend', 'ontimeupdate', 'ontoggle', 'onunload', 'onvolumechange', 'onwaiting', 'onwebkitfullscreenchange', 'onwebkitfullscreenerror', 'onwheel', 'outerHTML', 'outerText', 'ownerDocument', 'parentElement', 'parentNode', 'prefix', 'previousElementSibling', 'previousSibling', 'querySelector(', 'querySelectorAll(', 'remove(', 'removeAttribute(', 'removeAttributeNS(', 'removeAttributeNode(', 'removeChild(', 'removeEventListener(', 'replaceChild(', 'requestPointerLock(', 'scrollByLines(', 'scrollByPages(', 'scrollHeight', 'scrollIntoView(', 'scrollIntoViewIfNeeded(', 'scrollLeft', 'scrollTop', 'scrollWidth', 'setAttribute(', 'setAttributeNS(', 'setAttributeNode(', 'setAttributeNodeNS(', 'shadowRoot', 'spellcheck', 'style', 'tabIndex', 'tagName', 'text', 'textContent', 'title', 'translate', 'vLink', 'webkitMatchesSelector(', 'webkitRequestFullScreen(', 'webkitRequestFullscreen(', 'webkitRequestPointerLock(', 'webkitdropzone']$/;"	variable	line:68
s:docus	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:docus = ['ATTRIBUTE_NODE', 'CDATA_SECTION_NODE', 'COMMENT_NODE', 'DOCUMENT_FRAGMENT_NODE', 'DOCUMENT_NODE', 'DOCUMENT_POSITION_CONTAINED_BY', 'DOCUMENT_POSITION_CONTAINS', 'DOCUMENT_POSITION_DISCONNECTED', 'DOCUMENT_POSITION_FOLLOWING', 'DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC', 'DOCUMENT_POSITION_PRECEDING', 'DOCUMENT_TYPE_NODE', 'ELEMENT_NODE', 'ENTITY_NODE', 'ENTITY_REFERENCE_NODE', 'NOTATION_NODE', 'PROCESSING_INSTRUCTION_NODE', 'TEXT_NODE', 'URL', 'activeElement', 'addEventListener(', 'adoptNode(', 'alinkColor', 'all', 'anchors', 'appendChild(', 'applets', 'baseURI', 'bgColor', 'body', 'captureEvents(', 'caretRangeFromPoint(', 'characterSet', 'charset', 'childElementCount', 'childNodes', 'children', 'clear(', 'cloneNode(', 'close(', 'compareDocumentPosition(', 'compatMode', 'contains(', 'contentType', 'cookie', 'createAttribute(', 'createAttributeNS(', 'createCDATASection(', 'createComment(', 'createDocumentFragment(', 'createElement(', 'createElementNS(', 'createEvent(', 'createExpression(', 'createNSResolver(', 'createNodeIterator(', 'createProcessingInstruction(', 'createRange(', 'createTextNode(', 'createTreeWalker(', 'currentScript', 'defaultCharset', 'defaultView', 'designMode', 'dir', 'dispatchEvent(', 'doctype', 'documentElement', 'documentURI', 'domain', 'elementFromPoint(', 'embeds', 'evaluate(', 'execCommand(', 'exitPointerLock(', 'fgColor', 'firstChild', 'firstElementChild', 'fonts', 'forms', 'getCSSCanvasContext(', 'getElementById(', 'getElementsByClassName(', 'getElementsByName(', 'getElementsByTagName(', 'getElementsByTagNameNS(', 'getOverrideStyle(', 'getSelection(', 'hasChildNodes(', 'hasFocus(', 'head', 'hidden', 'images', 'implementation', 'importNode(', 'inputEncoding', 'insertBefore(', 'isDefaultNamespace(', 'isEqualNode(', 'isSameNode(', 'lastChild', 'lastElementChild', 'lastModified', 'linkColor', 'links', 'localName', 'location', 'lookupNamespaceURI(', 'lookupPrefix(', 'namespaceURI', 'nextSibling', 'nodeName', 'nodeType', 'nodeValue', 'normalize(', 'onabort', 'onautocomplete', 'onautocompleteerror', 'onbeforecopy', 'onbeforecut', 'onbeforepaste', 'onblur', 'oncancel', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'onclose', 'oncontextmenu', 'oncopy', 'oncuechange', 'oncut', 'ondblclick', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onended', 'onerror', 'onfocus', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadstart', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onpaste', 'onpause', 'onplay', 'onplaying', 'onpointerlockchange', 'onpointerlockerror', 'onprogress', 'onratechange', 'onreadystatechange', 'onreset', 'onresize', 'onscroll', 'onsearch', 'onseeked', 'onseeking', 'onselect', 'onselectionchange', 'onselectstart', 'onshow', 'onstalled', 'onsubmit', 'onsuspend', 'ontimeupdate', 'ontoggle', 'onvolumechange', 'onwaiting', 'onwebkitfullscreenchange', 'onwebkitfullscreenerror', 'onwebkitpointerlockchange', 'onwebkitpointerlockerror', 'onwheel', 'open(', 'ownerDocument', 'parentElement', 'parentNode', 'plugins', 'pointerLockElement', 'preferredStylesheetSet', 'previousSibling', 'queryCommandEnabled(', 'queryCommandIndeterm(', 'queryCommandState(', 'queryCommandSupported(', 'queryCommandValue(', 'querySelector(', 'querySelectorAll(', 'readyState', 'referrer', 'registerElement(', 'releaseEvents(', 'removeChild(', 'removeEventListener(', 'replaceChild(', 'rootElement', 'scripts', 'selectedStylesheetSet', 'styleSheets', 'textContent', 'title', 'visibilityState', 'vlinkColor', 'webkitCancelFullScreen(', 'webkitCurrentFullScreenElement', 'webkitExitFullscreen(', 'webkitExitPointerLock(', 'webkitFullScreenKeyboardInputAllowed', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitHidden', 'webkitIsFullScreen', 'webkitPointerLockElement', 'webkitVisibilityState', 'write(', 'writeln(', 'xmlEncoding', 'xmlStandalone', 'xmlVersion']$/;"	variable	line:70
s:hists	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:hists = ['arguments', 'back(', 'caller', 'constructor(', 'forward(', 'go(', 'length', 'name', 'prototype', 'pushState(', 'replaceState(', 'toString(']$/;"	variable	line:72
s:imags	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:imags = ['ALLOW_KEYBOARD_INPUT', 'ATTRIBUTE_NODE', 'CDATA_SECTION_NODE', 'COMMENT_NODE', 'DOCUMENT_FRAGMENT_NODE', 'DOCUMENT_NODE', 'DOCUMENT_POSITION_CONTAINED_BY', 'DOCUMENT_POSITION_CONTAINS', 'DOCUMENT_POSITION_DISCONNECTED', 'DOCUMENT_POSITION_FOLLOWING', 'DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC', 'DOCUMENT_POSITION_PRECEDING', 'DOCUMENT_TYPE_NODE', 'ELEMENT_NODE', 'ENTITY_NODE', 'ENTITY_REFERENCE_NODE', 'NOTATION_NODE', 'PROCESSING_INSTRUCTION_NODE', 'TEXT_NODE', 'accessKey', 'addEventListener(', 'align', 'alt', 'animate(', 'appendChild(', 'arguments', 'attributes', 'baseURI', 'blur(', 'border', 'caller', 'childElementCount', 'childNodes', 'children', 'classList', 'className', 'click(', 'clientHeight', 'clientLeft', 'clientTop', 'clientWidth', 'cloneNode(', 'compareDocumentPosition(', 'complete', 'constructor(', 'contains(', 'contentEditable', 'createShadowRoot(', 'crossOrigin', 'dataset', 'dir', 'dispatchEvent(', 'draggable', 'firstChild', 'firstElementChild', 'focus(', 'getAttribute(', 'getAttributeNS(', 'getAttributeNode(', 'getAttributeNodeNS(', 'getBoundingClientRect(', 'getClientRects(', 'getDestinationInsertionPoints(', 'getElementsByClassName(', 'getElementsByTagName(', 'getElementsByTagNameNS(', 'hasAttribute(', 'hasAttributeNS(', 'hasAttributes(', 'hasChildNodes(', 'height', 'hidden', 'hspace', 'id', 'innerHTML', 'innerText', 'insertAdjacentElement(', 'insertAdjacentHTML(', 'insertAdjacentText(', 'insertBefore(', 'isContentEditable', 'isDefaultNamespace(', 'isEqualNode(', 'isMap', 'isSameNode(', 'lang', 'lastChild', 'lastElementChild', 'length', 'localName', 'longDesc', 'lookupNamespaceURI(', 'lookupPrefix(', 'lowsrc', 'matches(', 'name', 'namespaceURI', 'naturalHeight', 'naturalWidth', 'nextElementSibling', 'nextSibling', 'nodeName', 'nodeType', 'nodeValue', 'normalize(', 'offsetHeight', 'offsetLeft', 'offsetParent', 'offsetTop', 'offsetWidth', 'onabort', 'onautocomplete', 'onautocompleteerror', 'onbeforecopy', 'onbeforecut', 'onbeforepaste', 'onblur', 'oncancel', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'onclose', 'oncontextmenu', 'oncopy', 'oncuechange', 'oncut', 'ondblclick', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onended', 'onerror', 'onfocus', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadstart', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onpaste', 'onpause', 'onplay', 'onplaying', 'onprogress', 'onratechange', 'onreset', 'onresize', 'onscroll', 'onsearch', 'onseeked', 'onseeking', 'onselect', 'onselectstart', 'onshow', 'onstalled', 'onsubmit', 'onsuspend', 'ontimeupdate', 'ontoggle', 'onvolumechange', 'onwaiting', 'onwebkitfullscreenchange', 'onwebkitfullscreenerror', 'onwheel', 'outerHTML', 'outerText', 'ownerDocument', 'parentElement', 'parentNode', 'prefix', 'previousElementSibling', 'previousSibling', 'prototype', 'querySelector(', 'querySelectorAll(', 'remove(', 'removeAttribute(', 'removeAttributeNS(', 'removeAttributeNode(', 'removeChild(', 'removeEventListener(', 'replaceChild(', 'requestPointerLock(', 'scrollByLines(', 'scrollByPages(', 'scrollHeight', 'scrollIntoView(', 'scrollIntoViewIfNeeded(', 'scrollLeft', 'scrollTop', 'scrollWidth', 'setAttribute(', 'setAttributeNS(', 'setAttributeNode(', 'setAttributeNodeNS(', 'shadowRoot', 'spellcheck', 'src', 'srcset', 'style', 'tabIndex', 'tagName', 'textContent', 'title', 'translate', 'useMap', 'vspace', 'webkitMatchesSelector(', 'webkitRequestFullScreen(', 'webkitRequestFullscreen(', 'webkitRequestPointerLock(', 'webkitdropzone', 'width', 'x', 'y']$/;"	variable	line:74
s:navis	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:navis = ['appCodeName', 'appName', 'appVersion', 'arguments', 'caller', 'constructor(', 'cookieEnabled', 'doNotTrack', 'geolocation', 'getGamepads(', 'getMediaDevices(', 'getStorageUpdates(', 'hardwareConcurrency', 'javaEnabled(', 'language', 'languages', 'length', 'maxTouchPoints', 'mimeTypes', 'name', 'onLine', 'platform', 'plugins', 'product', 'productSub', 'prototype', 'registerProtocolHandler(', 'toString(', 'userAgent', 'vendor', 'vendorSub', 'vibrate(', 'webkitGetGamepads(', 'webkitGetUserMedia(', 'webkitPersistentStorage', 'webkitTemporaryStorage']$/;"	variable	line:76
s:scres	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:scres = ['arguments', 'availHeight', 'availLeft', 'availTop', 'availWidth', 'caller', 'colorDepth', 'constructor(', 'height', 'length', 'name', 'pixelDepth', 'prototype', 'toString(', 'width']$/;"	variable	line:78
s:styls	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:styls = ['alignContent', 'alignItems', 'alignSelf', 'alignmentBaseline', 'all', 'backfaceVisibility', 'background', 'backgroundAttachment', 'backgroundBlendMode', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundRepeatX', 'backgroundRepeatY', 'backgroundSize', 'baselineShift', 'border', 'borderBottom', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderBottomStyle', 'borderBottomWidth', 'borderCollapse', 'borderColor', 'borderImage', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeft', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRadius', 'borderRight', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderSpacing', 'borderStyle', 'borderTop', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderTopStyle', 'borderTopWidth', 'borderWidth', 'bottom', 'boxShadow', 'boxSizing', 'bufferedRendering', 'captionSide', 'clear', 'clip', 'clipPath', 'clipRule', 'color', 'colorInterpolation', 'colorInterpolationFilters', 'colorRendering', 'content', 'counterIncrement', 'counterReset', 'cssText', 'cursor', 'direction', 'display', 'dominantBaseline', 'emptyCells', 'enableBackground', 'fill', 'fillOpacity', 'fillRule', 'filter', 'flex', 'flexBasis', 'flexDirection', 'flexFlow', 'flexGrow', 'flexShrink', 'flexWrap', 'float', 'floodColor', 'floodOpacity', 'font', 'fontFamily', 'fontKerning', 'fontSize', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantLigatures', 'fontWeight', 'getPropertyCSSValue(', 'getPropertyPriority(', 'getPropertyValue(', 'glyphOrientationHorizontal', 'glyphOrientationVertical', 'height', 'imageRendering', 'item(', 'justifyContent', 'left', 'length', 'letterSpacing', 'lightingColor', 'lineHeight', 'listStyle', 'listStyleImage', 'listStylePosition', 'listStyleType', 'margin', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop', 'marker', 'markerEnd', 'markerMid', 'markerStart', 'mask', 'maskType', 'maxHeight', 'maxWidth', 'maxZoom', 'minHeight', 'minWidth', 'minZoom', 'objectFit', 'objectPosition', 'opacity', 'order', 'orientation', 'orphans', 'outline', 'outlineColor', 'outlineOffset', 'outlineStyle', 'outlineWidth', 'overflow', 'overflowWrap', 'overflowX', 'overflowY', 'padding', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop', 'page', 'pageBreakAfter', 'pageBreakBefore', 'pageBreakInside', 'paintOrder', 'parentRule', 'perspective', 'perspectiveOrigin', 'pointerEvents', 'position', 'quotes', 'removeProperty(', 'resize', 'right', 'setProperty(', 'shapeImageThreshold', 'shapeMargin', 'shapeOutside', 'shapeRendering', 'size', 'speak', 'src', 'stopColor', 'stopOpacity', 'stroke', 'strokeDasharray', 'strokeDashoffset', 'strokeLinecap', 'strokeLinejoin', 'strokeMiterlimit', 'strokeOpacity', 'strokeWidth', 'tabSize', 'tableLayout', 'textAlign', 'textAnchor', 'textDecoration', 'textIndent', 'textLineThroughColor', 'textLineThroughMode', 'textLineThroughStyle', 'textLineThroughWidth', 'textOverflow', 'textOverlineColor', 'textOverlineMode', 'textOverlineStyle', 'textOverlineWidth', 'textRendering', 'textShadow', 'textTransform', 'textUnderlineColor', 'textUnderlineMode', 'textUnderlineStyle', 'textUnderlineWidth', 'top', 'touchAction', 'transform', 'transformOrigin', 'transformStyle', 'transition', 'transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction', 'unicodeBidi', 'unicodeRange', 'userZoom', 'vectorEffect', 'verticalAlign', 'visibility', 'webkitAnimation', 'webkitAnimationDelay', 'webkitAnimationDirection', 'webkitAnimationDuration', 'webkitAnimationFillMode', 'webkitAnimationIterationCount', 'webkitAnimationName', 'webkitAnimationPlayState', 'webkitAnimationTimingFunction', 'webkitAppRegion', 'webkitAppearance', 'webkitAspectRatio', 'webkitBackfaceVisibility', 'webkitBackgroundClip', 'webkitBackgroundComposite', 'webkitBackgroundOrigin', 'webkitBackgroundSize', 'webkitBorderAfter', 'webkitBorderAfterColor', 'webkitBorderAfterStyle', 'webkitBorderAfterWidth', 'webkitBorderBefore', 'webkitBorderBeforeColor', 'webkitBorderBeforeStyle', 'webkitBorderBeforeWidth', 'webkitBorderEnd', 'webkitBorderEndColor', 'webkitBorderEndStyle', 'webkitBorderEndWidth', 'webkitBorderFit', 'webkitBorderHorizontalSpacing', 'webkitBorderImage', 'webkitBorderRadius', 'webkitBorderStart', 'webkitBorderStartColor', 'webkitBorderStartStyle', 'webkitBorderStartWidth', 'webkitBorderVerticalSpacing', 'webkitBoxAlign', 'webkitBoxDecorationBreak', 'webkitBoxDirection', 'webkitBoxFlex', 'webkitBoxFlexGroup', 'webkitBoxLines', 'webkitBoxOrdinalGroup', 'webkitBoxOrient', 'webkitBoxPack', 'webkitBoxReflect', 'webkitBoxShadow', 'webkitClipPath', 'webkitColumnBreakAfter', 'webkitColumnBreakBefore', 'webkitColumnBreakInside', 'webkitColumnCount', 'webkitColumnGap', 'webkitColumnRule', 'webkitColumnRuleColor', 'webkitColumnRuleStyle', 'webkitColumnRuleWidth', 'webkitColumnSpan', 'webkitColumnWidth', 'webkitColumns', 'webkitFilter', 'webkitFontFeatureSettings', 'webkitFontSizeDelta', 'webkitFontSmoothing', 'webkitHighlight', 'webkitHyphenateCharacter', 'webkitLineBoxContain', 'webkitLineBreak', 'webkitLineClamp', 'webkitLocale', 'webkitLogicalHeight', 'webkitLogicalWidth', 'webkitMarginAfter', 'webkitMarginAfterCollapse', 'webkitMarginBefore', 'webkitMarginBeforeCollapse', 'webkitMarginBottomCollapse', 'webkitMarginCollapse', 'webkitMarginEnd', 'webkitMarginStart', 'webkitMarginTopCollapse', 'webkitMask', 'webkitMaskBoxImage', 'webkitMaskBoxImageOutset', 'webkitMaskBoxImageRepeat', 'webkitMaskBoxImageSlice', 'webkitMaskBoxImageSource', 'webkitMaskBoxImageWidth', 'webkitMaskClip', 'webkitMaskComposite', 'webkitMaskImage', 'webkitMaskOrigin', 'webkitMaskPosition', 'webkitMaskPositionX', 'webkitMaskPositionY', 'webkitMaskRepeat', 'webkitMaskRepeatX', 'webkitMaskRepeatY', 'webkitMaskSize', 'webkitMaxLogicalHeight', 'webkitMaxLogicalWidth', 'webkitMinLogicalHeight', 'webkitMinLogicalWidth', 'webkitPaddingAfter', 'webkitPaddingBefore', 'webkitPaddingEnd', 'webkitPaddingStart', 'webkitPerspective', 'webkitPerspectiveOrigin', 'webkitPerspectiveOriginX', 'webkitPerspectiveOriginY', 'webkitPrintColorAdjust', 'webkitRtlOrdering', 'webkitRubyPosition', 'webkitTapHighlightColor', 'webkitTextCombine', 'webkitTextDecorationsInEffect', 'webkitTextEmphasis', 'webkitTextEmphasisColor', 'webkitTextEmphasisPosition', 'webkitTextEmphasisStyle', 'webkitTextFillColor', 'webkitTextOrientation', 'webkitTextSecurity', 'webkitTextStroke', 'webkitTextStrokeColor', 'webkitTextStrokeWidth', 'webkitTransform', 'webkitTransformOrigin', 'webkitTransformOriginX', 'webkitTransformOriginY', 'webkitTransformOriginZ', 'webkitTransformStyle', 'webkitTransition', 'webkitTransitionDelay', 'webkitTransitionDuration', 'webkitTransitionProperty', 'webkitTransitionTimingFunction', 'webkitUserDrag', 'webkitUserModify', 'webkitUserSelect', 'webkitWritingMode', 'whiteSpace', 'widows', 'width', 'willChange', 'wordBreak', 'wordSpacing', 'wordWrap', 'writingMode', 'zIndex', 'zoom']$/;"	variable	line:80
s:niters	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:niters = ['arguments', 'caller', 'constructor(', 'detach(', 'expandEntityReferences', 'filter', 'length', 'name', 'nextNode(', 'pointerBeforeReferenceNode', 'previousNode(', 'prototype', 'referenceNode', 'root', 'toString(', 'whatToShow']$/;"	variable	line:82
s:nfilter	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:nfilter = ['FILTER_ACCEPT', 'FILTER_REJECT', 'FILTER_SKIP', 'SHOW_ALL', 'SHOW_ATTRIBUTE', 'SHOW_CDATA_SECTION', 'SHOW_COMMENT', 'SHOW_DOCUMENT', 'SHOW_DOCUMENT_FRAGMENT', 'SHOW_DOCUMENT_TYPE', 'SHOW_ELEMENT', 'SHOW_ENTITY', 'SHOW_ENTITY_REFERENCE', 'SHOW_NOTATION', 'SHOW_PROCESSING_INSTRUCTION', 'SHOW_TEXT', 'acceptNode(', 'arguments', 'caller', 'constructor(', 'length', 'name', 'prototype', 'toString(']$/;"	variable	line:84
s:twalkers	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:twalkers = ['arguments', 'caller', 'constructor(', 'currentNode', 'expandEntityReferences', 'filter', 'firstChild(', 'lastChild(', 'length', 'name', 'nextNode(', 'nextSibling(', 'parentNode(', 'previousNode(', 'previousSibling(', 'prototype', 'root', 'toString(', 'whatToShow']$/;"	variable	line:86
s:console	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:console = ['assert(', 'clear(', 'count(', 'debug(', 'dir(', 'dirxml(', 'error(', 'group(', 'groupCollapsed(', 'groupEnd(', 'info(', 'log(', 'markTimeline(', 'memory', 'profile(', 'profileEnd(', 'table(', 'time(', 'timeEnd(', 'timeStamp(', 'timeline(', 'timelineEnd(', 'trace(', 'warn(']$/;"	variable	line:88
s:xmlhs	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^let s:xmlhs = ['DONE', 'HEADERS_RECEIVED', 'LOADING', 'OPENED', 'UNSENT', 'abort(', 'addEventListener(', 'arguments', 'caller', 'constructor(', 'dispatchEvent(', 'getAllResponseHeaders(', 'getResponseHeader(', 'length', 'name', 'onabort', 'onerror', 'onload', 'onloadend', 'onloadstart', 'onprogress', 'onreadystatechange', 'ontimeout', 'open(', 'overrideMimeType(', 'prototype', 'readyState', 'removeEventListener(', 'response', 'responseText', 'responseType', 'responseURL', 'responseXML', 'send(', 'setRequestHeader(', 'status', 'statusText', 'timeout', 'toString(', 'upload', 'withCredentials']$/;"	variable	line:90
js#CompleteJS	/home/emanuelx/dotfiles/home/emanuelx/.vim/bundle/vim-better-javascript/autoload/js.vim	/^function! js#CompleteJS(findstart, base)$/;"	function	line:92
main	/home/emanuelx/dotfiles/home/emanuelx/.scripts/teste.c	/^int main(int argc, char argv){$/;"	function	line:4	signature:(int argc, char argv)
strict	/home/emanuelx/dotfiles/update.pl	/^use strict;$/;"	use	line:2
warnings	/home/emanuelx/dotfiles/update.pl	/^use warnings;$/;"	use	line:3
File::Copy	/home/emanuelx/dotfiles/update.pl	/^use File::Copy;$/;"	use	line:8
File::Basename	/home/emanuelx/dotfiles/update.pl	/^use File::Basename;$/;"	use	line:9
Cwd	/home/emanuelx/dotfiles/update.pl	/^use Cwd;$/;"	use	line:10
copyFolder	/home/emanuelx/dotfiles/update.pl	/^sub copyFolder($;$;$) {$/;"	subroutine	line:34
createFolderStructure	/home/emanuelx/dotfiles/update.pl	/^sub createFolderStructure($) {$/;"	subroutine	line:58
backupFiles	/home/emanuelx/dotfiles/update.pl	/^sub backupFiles() {$/;"	subroutine	line:65
uploadToGit	/home/emanuelx/dotfiles/update.pl	/^sub uploadToGit(){$/;"	subroutine	line:74
script :)"')	/home/emanuelx/dotfiles/update.pl	/^  system('git commit -m "updated dotFiles with script :)"');$/;"	role	line:83
dotfiles	/home/emanuelx/dotfiles/README.md	/^# dotfiles$/;"	function	line:1
